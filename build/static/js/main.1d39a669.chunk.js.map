{"version":3,"sources":["pictures/App-Picture.png","fonts/FredokaOne-Regular.ttf","react/components/HomeTopbar.js","redux/helpers/index.js","redux/balance.js","redux/history.js","redux/transactions.js","redux/auth.js","redux/index.js","react/components/ExpenseForm.js","react/components/IncomeForm.js","react/components/data/Transaction.js","react/helpers/index.js","react/components/data/Transactions.js","react/components/data/Balance.js","react/components/data/historyCharts/IncomeAndExpense.js","react/components/data/historyCharts/ExpensesByCategory.js","react/components/data/History.js","react/components/data/currentCharts/ExpensesByCategory.js","react/components/data/Current.js","react/components/Data.js","react/components/ContentCard.js","react/pages/Home.js","react/pages/Login.js","react/pages/Income.js","react/pages/Expense.js","react/pages/Signup.js","react/pages/LandingPage.js","react/pages/404.js","react/helpers/HOCs.js","react/App.js","index.js"],"names":["module","exports","useStyles","makeStyles","topbar","display","width","justifyContent","alignItems","marginBottom","text","fontSize","textAlign","fontFamily","button","height","border","buttonWrap","HomeTopbar","props","classes","forwardLink","React","forwardRef","ref","className","Button","color","variant","startIcon","AddCircleOutline","component","to","size","RemoveCircleOutline","createActions","actionName","START","createAction","SUCCESS","FAIL","initialState","result","loading","error","asyncCases","state","action","payload","GET_BALANCE","reducers","getBalance","createReducer","GET_HISTORY","CREATE_HISTORY","createHistory","endDate","dispatch","client","mutate","mutation","gql","then","res","data","history","errors","getHistory","POST_INCOME","POST_EXPENSE","postIncome","postExpense","LOG_IN","SIGN_UP","login","signUp","createBrowserHistory","basename","process","store","configureStore","reducer","router","connectRouter","balance","combineReducers","balanceReducers","transactions","transactionReducers","historyReducers","auth","authReducers","preloadedState","devTools","ApolloClient","uri","onError","networkError","graphQLErrors","console","log","request","operation","token","getState","setContext","headers","authorization","theme","form","padding","backgroundColor","borderWidth","borderRadius","boxShadow","TextField","join","title","ExpenseForm","today","Date","date","getFullYear","getMonth","slice","getDate","useState","name","category","amount","setState","finished","setFinished","postState","useSelector","redux","useDispatch","handleChange","event","target","value","Grid","container","spacing","direction","justify","style","item","FormControl","fullWidth","InputLabel","OutlinedInput","onChange","labelWidth","Select","native","label","inputProps","id","startAdornment","InputAdornment","position","type","textField","InputLabelProps","shrink","disabled","onClick","expenseData","parseFloat","parseInt","createTransaction","CircularProgress","IncomeForm","newPeriod","currentData","checked","length","FormControlLabel","control","Checkbox","incomeData","getStore","a","createHistoryAction","fontWeight","Transaction","sign","isExpense","toFixed","split","Transactions","map","trans","key","med","small","withWidth","income","expense","IncomeAndExpense","startDate","months","aspect","historyObj","margin","top","right","left","bottom","dataKey","strokeDasharray","separator","verticalAlign","stroke","dot","r","ExpensesByCategory","getRandomColor","i","Math","floor","random","forEach","categories","push","resultArr","Object","keys","avg","reduce","prev","curr","getData","nameKey","outerRadius","fill","entry","index","History","useEffect","query","charts","expenses","expenseObj","sum","Current","filter","user","paddingLeft","paddingRight","wrapper","maxWidth","paddingBottom","ContentCard","children","Login","username","password","loginState","message","marginRight","marginLeft","Income","Expense","Signup","password2","warning","setWarning","signUpState","createUser","header","background","flexDirection","titleWrap","subtitle","link","textDecoration","marginTop","headerContent","breakpoints","down","picture","up","minHeight","maxheight","headerContentCard","minWidth","headerContentTitle","unorderedList","listStyleType","LandingPage","src","require","alt","Error","userIsAuthenticated","connectedRouterRedirect","redirectPath","authenticatedSelector","wrapperDisplayName","userNotAuthenticated","allowRedirectBack","app","gridTemplate","window","innerHeight","gridRow","content","App","location","pathname","exact","path","Home","ReactDOM","render","document","getElementById"],"mappings":"qJAAAA,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,gD,8LCOrCC,EAAYC,YAAW,CACzBC,OAAQ,CACJC,QAAS,OACTC,MAAO,OACPC,eAAgB,eAChBC,WAAY,SACZC,aAAc,IAElBC,KAAM,CACFC,SAAS,GACTC,UAAU,SACVC,WAAW,cAEfC,OAAQ,CACJR,MAAO,GACPS,OAAQ,GACRC,OAAQ,EACRL,SAAU,IAEdM,WAAY,CACRZ,QAAS,OACTE,eAAgB,gBAChBD,MAAO,OAiCAY,EA7BI,SAACC,GAChB,IAAMC,EAAUlB,IACVmB,EAAcC,IAAMC,YAAW,SAACJ,EAAOK,GAAR,OAAgB,yBAAKA,IAAKA,GAAK,kBAAC,IAAYL,OACjF,OACI,yBAAKM,UAAWL,EAAQhB,QACpB,yBAAKqB,UAAWL,EAAQH,YACpB,kBAACS,EAAA,EAAD,CACID,UAAWL,EAAQN,OACnBa,MAAM,UACNC,QAAQ,YACRC,UAAW,kBAACC,EAAA,EAAD,MACXC,UAAWV,EACXW,GAAG,UACHC,KAAK,SAPT,UASA,kBAACP,EAAA,EAAD,CACID,UAAWL,EAAQN,OACnBa,MAAM,YACNC,QAAQ,YACRC,UAAW,kBAACK,EAAA,EAAD,MACXH,UAAWV,EACXW,GAAG,WACHC,KAAK,SAPT,c,wIC5BHE,EAAgB,SAAAC,GAAU,MAAK,CAC1CC,MAAOC,YAAaF,EAAa,UACjCG,QAASD,YAAaF,EAAa,YACnCI,KAAMF,YAAaF,EAAa,WAGrBK,EAAe,CAC1BC,OAAQ,KACRC,SAAS,EACTC,MAAO,MAGIC,EAAa,SAAC,GAAD,MAAGR,EAAH,EAAGA,MAAOE,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,KAAnB,0BACvBH,GAAQ,SAACS,EAAOC,GACfD,EAAMH,SAAU,EAChBG,EAAMF,MAAQ,QAHQ,cAKvBL,GAAU,SAACO,EAAOC,GACjBD,EAAMH,SAAU,EAChBG,EAAMJ,OAASK,EAAOC,WAPA,cASvBR,GAAO,SAACM,EAAOC,GACdD,EAAMH,SAAU,EAChBG,EAAMF,MAAQG,EAAOC,WAXC,G,mfCpBnB,IAAMC,EAAcd,EAAc,eA+B5Be,EAAW,CACpBC,WAAYC,YAAcX,EAAD,eAClBI,EAAWI,M,o/BCjCtB,IAAMI,EAAclB,EAAc,eA6B5BmB,EAAiBnB,EAAc,cACxBoB,EAAgB,SAACC,GAAD,OAAa,SAAAC,GAEtC,OADAA,EAASH,EAAejB,SACjBqB,GAAOC,OAAO,CACjBC,SAAUC,YAAF,IAE0BL,KAenCM,MAAK,SAAAC,GACJ,OAAIA,EAAIC,MAAQD,EAAIC,KAAKT,eACrBE,EAASJ,EAAYd,QAAQwB,EAAIC,KAAKT,cAAcU,UAC7CR,EAASH,EAAef,QAAQ,aAEhCkB,EAASH,EAAed,KAAMuB,EAAIG,OAAUH,EAAIG,OAAS,iDAM/DhB,EAAW,CACpBiB,WAAYf,YAAcX,EAAD,eAClBI,EAAWQ,KAElBE,cAAeH,YAAcX,EAAD,eACrBI,EAAWS,M,4lCChEtB,IAAMc,EAAcjC,EAAc,eAwC5BkC,EAAelC,EAAc,gBA+BtBe,EAAW,CACpBoB,WAAYlB,YAAcX,EAAD,eAClBI,EAAWuB,KAElBG,YAAanB,YAAcX,EAAD,eACnBI,EAAWwB,M,goBC9Ef,IAAMG,GAASrC,EAAc,UAgCvBsC,GAAUtC,EAAc,WAiCxBe,GAAW,CACpBwB,MAAOtB,YAAcX,EAAD,eACbI,EAAW2B,MAElBG,OAAQvB,YAAcX,EAAD,eACdI,EAAW4B,OCnETR,GAAUW,YAAqB,CAC1CC,SAAUC,KAGCC,GAAQC,YAAe,CAClCC,QAAS,CACPC,OAAQC,YAAclB,IACtBmB,QAASC,YAAgBC,GACzBC,aAAcF,YAAgBG,GAC9BvB,QAASoB,YAAgBI,GACzBC,KAAML,YAAgBM,KAExBC,eAAgB,GAChBC,UAAUf,IAGCpB,GAAS,IAAIoC,IAAa,CACrCC,IAAK,iDACLC,QAAS,YAAsC,IAAnCC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cACxBC,QAAQC,IAAI,gBAAiBF,GAC7BC,QAAQC,IAAI,eAAgBH,IAE9BI,QAAS,SAACC,GACR,IAAMC,EAAQxB,GAAMyB,WAAWd,KAAKhB,MAAMhC,OAC1C4D,EAAUG,WAAW,CACnBC,QAAS,CACPC,cAAeJ,EAAK,iBAAaA,GAAQ,SCxB3CrG,GAAYC,aAAW,SAACyG,GAAD,MAAY,CACrCC,KAAM,CACFvG,MAAO,OACPwG,QAAQ,GACRC,gBAAiB,YACjBC,YAAY,EACZC,aAAc,EACdC,UAAW,iCAEfC,UAAW,CACPtG,WAAY,CACR,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAuG,KAAK,MAGbC,MAAO,CACH1G,SAAS,GACTE,WAAW,aACXD,UAAW,SACXN,MAAO,QAEXqC,QAAS,CACLtC,QAAS,OACTE,eAAgB,SAChBC,WAAY,SACZF,MAAO,YAkJAgH,GA9IK,SAACnG,GACjB,IAAMC,EAAUlB,KACVqH,EAAQ,IAAIC,KACZC,EAAOF,EAAMG,cAAc,KAAK,KAAOH,EAAMI,WAAW,IAAIC,OAAO,GAAG,KAAK,IAAML,EAAMM,WAAWD,OAAO,GAHpF,EAIDtG,IAAMwG,SAAS,CACrCC,KAAM,GACNC,SAAU,GACVC,OAAO,GACPR,KAAMA,IARiB,mBAIpB3E,EAJoB,KAIboF,EAJa,OAUK5G,IAAMwG,UAAS,GAVpB,mBAUpBK,EAVoB,KAUVC,EAVU,KAWrBC,EAAYC,uBAAY,SAAAC,GAAK,OAAIA,EAAMhD,aAAahB,eACpDd,EAAW+E,wBAYXC,EAAe,SAACC,GAClB,IAAMX,EAAOW,EAAMC,OAAOZ,KAC1BG,EAAS,eACFpF,EADC,eAEHiF,EAAOW,EAAMC,OAAOC,UAG7B,OACI,oCACA,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTC,QAAS,EACTC,UAAU,SACVxI,WAAW,aACXyI,QAAQ,SACRxH,UAAWL,EAAQyF,KACnBqC,MAAO,IAEP,kBAACL,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,wBAAImB,UAAWL,EAAQiG,OAAvB,sBAEJ,kBAACwB,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,kBAAC8I,EAAA,EAAD,CAAaC,WAAS,EAACzH,QAAQ,WAAWH,UAAWL,EAAQgI,aACzD,kBAACE,EAAA,EAAD,aACA,kBAACC,EAAA,EAAD,CACIX,MAAO9F,EAAMiF,KACbyB,SAAUf,EACVV,KAAK,OACL0B,WAAY,OAKxB,kBAACZ,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,kBAAC8I,EAAA,EAAD,CAAaxH,QAAQ,WAAWyH,WAAS,EAAC5H,UAAWL,EAAQsI,QACzD,kBAACJ,EAAA,EAAD,iBACA,kBAACI,EAAA,EAAD,CACIC,QAAM,EACNf,MAAO9F,EAAMkF,SACbwB,SAAUf,EACVmB,MAAM,WACNC,WAAY,CACR9B,KAAM,aAGV,4BAASa,MAAM,KACf,4BAAQA,MAAO,QAAf,QACA,4BAAQA,MAAO,OAAf,OACA,4BAAQA,MAAO,UAAf,UACA,4BAAQA,MAAO,WAAf,cAKZ,kBAACC,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,kBAAC8I,EAAA,EAAD,CAAaC,WAAS,EAACzH,QAAQ,WAAWH,UAAWL,EAAQgI,aACzD,kBAACE,EAAA,EAAD,eACA,kBAACC,EAAA,EAAD,CACIO,GAAG,4BACHlB,MAAO9F,EAAMmF,OACbuB,SAAUf,EACVV,KAAK,SACLgC,eAAgB,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SAAzB,KAChBR,WAAY,OAKxB,kBAACZ,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,yBAAKmB,UAAWL,EAAQgI,aACpB,kBAACjC,EAAA,EAAD,CACIY,KAAK,OACL6B,MAAM,OACNM,KAAK,OACLtB,MAAO9F,EAAM2E,KACb+B,SAAUf,EACVhH,UAAWL,EAAQ+I,UACnBC,gBAAiB,CACbC,QAAQ,OAMxB,kBAACxB,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAO,SACtB,kBAACuI,EAAA,EAAD,CACIC,WAAS,EACTtI,WAAW,SACXyI,QAAQ,UAER,kBAACvH,EAAA,EAAD,CACIC,MAAM,UACNC,QAAQ,YACRK,KAAK,QACLqI,SAAUjC,EAAU1F,QACpB4H,QAAS,WHvHN,IAACC,EGwHA/G,GHxHA+G,EGwHqB,eAAI1H,EAAL,CAAYmF,OAAQwC,WAAW3H,EAAMmF,UHxHzC,SAAAxE,GACxCA,EAASY,EAAahC,SAD8B,IAE7C0F,EAAgCyC,EAAhCzC,KAAME,EAA0BuC,EAA1BvC,OAAQR,EAAkB+C,EAAlB/C,KAAMO,EAAYwC,EAAZxC,SAC3B,OAAOtE,GAAOC,OAAO,CACjBC,SAAUC,YAAF,IAE0BkE,EAAkB2C,SAAkB,IAATzC,GAAyBR,EAAoCO,KAc3HlE,MAAK,SAAAC,GACJ,OAAIA,EAAIC,MAAQD,EAAIC,KAAK2G,mBACrBlH,EAASR,EAAYV,QAAQwB,EAAIC,KAAK2G,oBAC/BlH,EAASY,EAAa9B,YAEtBkB,EAASY,EAAa7B,KAAMuB,EAAIC,KAAKE,OAAUH,EAAIC,KAAKE,OAAS,kDGgGxDkE,GAAY,KAPpB,YAcPC,EAAU1F,SACP,yBAAKlB,UAAWL,EAAQuB,SACpB,kBAACiI,EAAA,EAAD,CAAkB3I,KAAM,OAKlCkG,IAAaE,EAAU1F,SACrB,kBAAC,IAAD,CAAUX,GAAG,Y,oBC5KnB9B,GAAYC,aAAW,SAACyG,GAAD,MAAY,CACrCC,KAAM,CACFvG,MAAO,OACPwG,QAAQ,GACRC,gBAAiB,YACjBC,YAAY,EACZC,aAAc,EACdC,UAAW,iCAEfC,UAAW,CACPtG,WAAY,CACR,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAuG,KAAK,MAGbC,MAAO,CACH1G,SAAS,GACTE,WAAW,aACXD,UAAW,SACXN,MAAO,QAEXqC,QAAS,CACLtC,QAAS,OACTE,eAAgB,SAChBC,WAAY,SACZF,MAAO,YA2IAuK,GAvII,SAAC1J,GAChB,IAAMC,EAAUlB,KACVqH,EAAQ,IAAIC,KACZC,EAAOF,EAAMG,cAAc,KAAK,KAAOH,EAAMI,WAAW,IAAIC,OAAO,GAAG,KAAK,IAAML,EAAMM,WAAWD,OAAO,GAHrF,EAIAtG,IAAMwG,SAAS,CACrCC,KAAM,GACNE,OAAO,GACPR,KAAMA,EACNqD,WAAW,IARW,mBAInBhI,EAJmB,KAIZoF,EAJY,OAUM5G,IAAMwG,UAAS,GAVrB,mBAUnBK,EAVmB,KAUTC,EAVS,KAWpBC,EAAYC,uBAAY,SAAAxF,GAAK,OAAIA,EAAMyC,aAAajB,cACpDyG,EAAczC,uBAAY,SAAAxF,GAAK,OAAIA,EAAMsC,QAAQjC,WAAWT,UAC5De,EAAW+E,wBAYXC,EAAe,SAACC,GAClB,IAAMX,EAAOW,EAAMC,OAAOZ,KAC1BG,EAAS,eACFpF,EADC,eAEHiF,EAAOW,EAAMC,OAAOqC,SAAWtC,EAAMC,OAAOC,UAGrD,OACI,oCACA,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTC,QAAS,EACTC,UAAU,SACVxI,WAAW,aACXyI,QAAQ,SACRxH,UAAWL,EAAQyF,KACnBqC,MAAO,IAEP,kBAACL,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,wBAAImB,UAAWL,EAAQiG,OAAvB,qBAEJ,kBAACwB,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,kBAAC8I,EAAA,EAAD,CAAaC,WAAS,EAACzH,QAAQ,WAAWH,UAAWL,EAAQgI,aACzD,kBAACE,EAAA,EAAD,aACA,kBAACC,EAAA,EAAD,CACIX,MAAO9F,EAAMiF,KACbyB,SAAUf,EACVV,KAAK,OACL0B,WAAY,OAKxB,kBAACZ,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,kBAAC8I,EAAA,EAAD,CAAaC,WAAS,EAACzH,QAAQ,WAAWH,UAAWL,EAAQgI,aACzD,kBAACE,EAAA,EAAD,eACA,kBAACC,EAAA,EAAD,CACIO,GAAG,4BACHlB,MAAO9F,EAAMmF,OACbuB,SAAUf,EACVV,KAAK,SACLgC,eAAgB,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SAAzB,KAChBR,WAAY,OAKxB,kBAACZ,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,yBAAKmB,UAAWL,EAAQgI,aACpB,kBAACjC,EAAA,EAAD,CACIY,KAAK,OACL6B,MAAM,OACNM,KAAK,OACLtB,MAAO9F,EAAM2E,KACb+B,SAAUf,EACVhH,UAAWL,EAAQ+I,UACnBC,gBAAiB,CACbC,QAAQ,OAKtBU,EAAYxF,cAAgBwF,EAAYxF,aAAa0F,OAAS,GAC5D,kBAACpC,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,kBAAC4K,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIJ,QAASlI,EAAMgI,UACftB,SAAUf,EACVV,KAAK,YACLpG,MAAM,YAGdiI,MAAM,uBAKlB,kBAACf,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAO,SACtB,kBAACuI,EAAA,EAAD,CACIC,WAAS,EACTtI,WAAW,SACXyI,QAAQ,UAER,kBAACvH,EAAA,EAAD,CACIC,MAAM,UACNC,QAAQ,YACRK,KAAK,QACLqI,SAAUjC,EAAU1F,QACpB4H,QAAS,WJ5JP,IAACc,EI6JC5H,GJ7JD4H,EI6JqB,eAAIvI,EAAL,CAAYmF,OAAQwC,WAAW3H,EAAMmF,UJ7J1D,uCAAgB,WAAOxE,EAAU6H,GAAjB,qBAAAC,EAAA,yDACtC9H,EAASW,EAAY/B,SACd0F,EAA2CsD,EAA3CtD,KAAME,EAAqCoD,EAArCpD,OAAQR,EAA6B4D,EAA7B5D,KAAMO,EAAuBqD,EAAvBrD,UAAuBqD,EAAbP,UAFC,gCAK5BrH,EAAS+H,EAAoB/D,IALD,UAM9B6D,IAAWrH,QAAQV,cAAcb,OANH,yCAOvBe,EAASW,EAAY5B,KAAK,6CAPH,gCAY/BkB,GAAOC,OAAO,CACjBC,SAAUC,YAAF,IAE0BkE,EAAkB2C,SAAkB,IAATzC,GAAyBR,EAAqCO,KAc5HlE,MAAK,SAAAC,GACJ,OAAIA,EAAIC,MAAQD,EAAIC,KAAK2G,mBACrBlH,EAASR,EAAYV,QAAQwB,EAAIC,KAAK2G,oBAC/BlH,EAASW,EAAY7B,YAErBkB,EAASW,EAAY5B,KAAMuB,EAAIC,KAAKE,OAAUH,EAAIC,KAAKE,OAAS,gDAlCzC,2CAAhB,0DI8JEkE,GAAY,KAPpB,YAYPC,EAAU1F,SACP,yBAAKwG,MAAI,EAAC1H,UAAWL,EAAQuB,SACzB,kBAACiI,EAAA,EAAD,CAAkB3I,KAAM,OAKlCkG,IAAaE,EAAU1F,SACrB,kBAAC,IAAD,CAAUX,GAAG,YCrLnB9B,GAAYC,YAAW,CACzB8H,OAAQ,CACJwD,WAAY,UA0BLC,GAtBK,SAACvK,GACjB,ICZuBsG,EDYnBrG,EAAUlB,KACVyL,EAAQxK,EAAM6C,KAAK4H,UAAa,IAAI,IACpCjK,EAASR,EAAM6C,KAAK4H,UAAa,MAAM,QACvC3D,EAAgC,IAAtB9G,EAAM6C,KAAKiE,OAAgB,EAAIwC,WAAWtJ,EAAM6C,KAAKiE,OAAS,KAAK4D,QAAQ,GACzF,OACI,kBAAChD,EAAA,EAAD,CACIC,WAAS,EACTE,UAAU,UAEV,4BAAK7H,EAAM6C,KAAK+D,MAChB,kBAACc,EAAA,EAAD,CACIC,WAAS,EACTG,QAAQ,iBAER,6BCxBZxB,GAFuBA,ED0BKtG,EAAM6C,KAAKyD,MCxB3BqE,MAAM,KACZ,GAAN,OAFe,CAAC,MAAO,MAAO,QAAS,QAAS,MAAO,OAAQ,OAAQ,MAAO,OAAQ,MAAO,MAAO,OAEnFpB,SAASjD,EAAK,KAA/B,YAAuCiD,SAASjD,EAAK,IAArD,aAA6DA,EAAK,MDwBtD,wBAAIhG,UAAWL,EAAQ6G,OAAQiB,MAAO,CAACvH,MAAOA,IAASgK,EAAvD,IAA8D1D,MEI/D8D,GA1BM,SAAC5K,GAClB,IAAMoE,EAAepE,EAAM6C,KAAKgI,KAAI,SAAAC,GAAK,OACrC,kBAACpD,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAO,QAAS4L,IAAKD,EAAMnC,IAC1C,kBAAC,GAAD,CAAa9F,KAAMiI,QAG3B,OACI,kBAAC,GAAD,CAAa5E,MAAM,mBACf,kBAACwB,EAAA,EAAD,CACIC,WAAS,EACTC,QAAS,EACTC,UAAU,SACVC,QAAQ,gBACRzI,WAAW,UAEV+E,EACwB,IAAxBA,EAAa0F,QACV,kBAACpC,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,mG,UCjBlBJ,GAAYC,aAAW,iBAAO,CAChCgM,IAAK,CACDxL,SAAS,IAEbyL,MAAO,CACHzL,SAAS,QAqCF0L,mBAjCC,SAAClL,GACb,IAAMC,EAAUlB,KADO,EAEUiB,EAAM6C,KAAlCoB,EAFkB,EAElBA,QAASkH,EAFS,EAETA,OAAQC,EAFC,EAEDA,QAItB,OAHAnH,EAAuB,IAAZA,EAAiB,EAAIqF,WAAWtJ,EAAM6C,KAAKoB,QAAU,KAAKyG,QAAQ,GAC7ES,EAAqB,IAAXA,EAAgB,EAAI7B,WAAWtJ,EAAM6C,KAAKsI,OAAS,KAAKT,QAAQ,GAC1EU,EAAwB,IAAZA,EAAiB,EAAI9B,WAAWtJ,EAAM6C,KAAKuI,QAAU,KAAKV,QAAQ,GAE1E,kBAAC,GAAD,CAAaxE,MAAM,mBACf,kBAACwB,EAAA,EAAD,CACIC,WAAS,EACTG,QAAQ,iBAER,wBAAIxH,UAAWL,EAAQ+K,KAAvB,WACA,wBAAI1K,UAAWL,EAAQ+K,KAAvB,IAA8B/G,IAElC,kBAACyD,EAAA,EAAD,CACIC,WAAS,EACTG,QAAQ,iBAER,wBAAIxH,UAAWL,EAAQgL,OAAvB,UACA,wBAAI3K,UAAWL,EAAQgL,OAAvB,IAAgCE,IAEpC,kBAACzD,EAAA,EAAD,CACIC,WAAS,EACTG,QAAQ,iBAER,wBAAIxH,UAAWL,EAAQgL,OAAvB,YACA,wBAAI3K,UAAWL,EAAQgL,OAAvB,IAAgCG,KAElB,OAAhBpL,EAAMb,OAAkC,OAAhBa,EAAMb,QAAmB,kBAAC,EAAD,U,SCJhDkM,GArCU,SAACrL,GAAW,IAC1B8C,EAAW9C,EAAX8C,QAEH8D,EAAO,SAAC0E,EAAWjJ,GACnB,IAAMkJ,EAAS,CAAC,MAAO,MAAO,QAAS,QAAS,MAAO,OAAQ,OAAQ,MAAO,OAAQ,MAAO,MAAO,OAGpG,OAFAD,EAAYA,EAAUX,MAAM,KAC5BtI,EAAUA,EAAQsI,MAAM,KAChBW,EAAU,KAAOjJ,EAAQ,GAA1B,UAAmCkJ,EAAOhC,SAAS+B,EAAU,IAAM,GAAnE,YAAyEA,EAAU,GAAnF,YAAyFjJ,EAAQ,IAAjG,UAA2GkJ,EAAOhC,SAAS+B,EAAU,IAAM,GAA3I,YAAiJA,EAAU,GAA3J,cAAmKC,EAAOhC,SAASlH,EAAQ,IAAM,GAAjM,YAAuMA,EAAQ,KAY1N,OACI,6BACI,kEACA,kBAAC,KAAD,CAAqBlD,MAAM,MAAMqM,OAAQ,GACrC,kBAAC,KAAD,CAAW3I,KAbNC,EAAQ2D,MAAM,EAAG,GAAGoE,KAAI,SAAAY,GAAU,MAC/C,CACI7E,KAAMA,EAAK6E,EAAWH,UAAWG,EAAWpJ,SAC5C4B,QAASqF,WAAWmC,EAAWxH,QAAU,KAAKyG,QAAQ,GACtDS,OAAQ7B,WAAWmC,EAAWN,OAAS,KAAKT,QAAQ,GACpDU,QAAS9B,WAAWmC,EAAWL,QAAU,KAAKV,QAAQ,OAQzBgB,OAAQ,CAACC,IAAK,EAAGC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IACnE,kBAAC,KAAD,CAAOC,QAAQ,OAAOhE,MAAO,CAACvI,SAAS,MACvC,kBAAC,KAAD,CAAOuI,MAAO,CAACvI,SAAS,MACxB,kBAAC,KAAD,CAAewM,gBAAgB,QAC/B,kBAAC,KAAD,CAASC,UAAU,QACnB,kBAAC,KAAD,CAAQC,cAAc,MAAMtM,OAAQ,KACpC,kBAAC,KAAD,CAAMmJ,KAAK,WAAWgD,QAAQ,SAASI,OAAO,UAAUC,IAAK,CAACC,EAAE,KAChE,kBAAC,KAAD,CAAMtD,KAAK,WAAWgD,QAAQ,UAAUI,OAAO,UAAUC,IAAK,CAACC,EAAE,SC6BtEC,GA3DY,SAACtM,GAAW,IAC5B8C,EAAW9C,EAAX8C,QAEDyJ,EAAiB,WAGnB,IAFA,IACI/L,EAAQ,IACHgM,EAAI,EAAGA,EAAI,EAAGA,IACnBhM,GAHY,aAGKiM,KAAKC,MAAsB,EAAhBD,KAAKE,WAErC,OAAOnM,GAyBLqC,EAtBU,WACZ,IAAItB,EAAS,GAEbuB,EAAQ2D,MAAM,EAAG,GAAGmG,SAAQ,SAAAnB,GACxBA,EAAWoB,WAAWD,SAAQ,SAAA/F,GAC1B,IAAMC,EAASwC,WAAWzC,EAASC,OAAS,KACzCvF,EAAOsF,EAASD,MACfrF,EAAOsF,EAASD,MAAMkG,KAAKhG,GAE3BvF,EAAOsF,EAASD,MAAQ,CAACE,SAKrC,IAAIiG,EAAY,GAMhB,OALAC,OAAOC,KAAK1L,GAAQqL,SAAQ,SAAA/F,GACxB,IACMqG,EADM3L,EAAOsF,GAAUsG,QAAO,SAACC,EAAMC,GAAP,OAAgBA,EAAQD,KAC1C7L,EAAOsF,GAAUiD,OACnCiD,EAAUD,KAAK,CAAClG,KAAMC,EAAUC,OAAQoG,OAErCH,EAEEO,GACb,OACI,6BACI,2DACA,kBAAC,KAAD,CAAqBnO,MAAM,OAAOqM,OAAQ,GACtC,kBAAC,KAAD,KACI,kBAAC,KAAD,MACA,kBAAC,KAAD,CACI3I,KAAMA,EACNkJ,QAAQ,SACRwB,QAAQ,OACRC,YAAa,MACbC,KAAK,UACLhF,MAAO,SAAC5F,GAAD,MAAU,IAAMyG,WAAWzG,EAAKiE,QAAQ4D,QAAQ,KAGnD7H,EAAKgI,KAAI,SAAC6C,EAAOC,GAAR,OAAkB,kBAAC,KAAD,CAAM5C,IAAG,eAAU4C,GAASF,KAAMlB,cChB1EqB,GA/BC,SAAC5N,GACb,IAAMsC,EAAW+E,wBACbvE,EAAUqE,uBAAY,SAAAxF,GAAK,OAAIA,EAAMmB,QAAQE,cAEjD6K,qBAAU,WACF/K,EAAQvB,QAAWuB,EAAQtB,SAC3Bc,GZCoB,SAAAA,GAG5B,OAFAA,EAASJ,EAAYhB,SAEdqB,GAAOuL,MAAM,CAChBA,MAAOpL,YAAF,OAeNC,MAAK,SAAAC,GACAA,EAAIC,MAAQD,EAAIC,KAAKC,QACrBR,EAASJ,EAAYd,QAAQwB,EAAIC,KAAKC,UAEtCR,EAASJ,EAAYb,KAAK,iEYpBlC,IAAI0M,EAAS,GASb,OAPGjL,EAAQvB,QAAUuB,EAAQvB,OAAOuI,QAAU,GAC1CiE,EAAOjB,KAAK,kBAAC,GAAD,CAAkBhK,QAASA,EAAQvB,OAAQwJ,IAAI,sBAE5DjI,EAAQvB,QAAUuB,EAAQvB,OAAOuI,QAAU,GAC1CiE,EAAOjB,KAAK,kBAAC,GAAD,CAAoBhK,QAASA,EAAQvB,OAAQwJ,IAAI,wBAI7D,kBAAC,GAAD,CAAa7E,MAAM,mBACbpD,EAAQvB,QAAUwM,EAAOjE,OAAS,GAChCiE,EAEFjL,EAAQvB,QAA4B,IAAlBwM,EAAOjE,QACvB,8GC2BDwC,GAvDY,SAACtM,GAAW,IAC5BgO,EAAYhO,EAAZgO,SAEDzB,EAAiB,WAGnB,IAFA,IACI/L,EAAQ,IACHgM,EAAI,EAAGA,EAAI,EAAGA,IACnBhM,GAHY,aAGKiM,KAAKC,MAAsB,EAAhBD,KAAKE,WAErC,OAAOnM,GAsBLqC,EAnBU,WACZ,IAAItB,EAAS,GAEdyM,EAASpB,SAAQ,SAAAqB,GACZ,IAAMnH,EAASwC,WAAW2E,EAAWnH,OAAS,KAC3CvF,EAAO0M,EAAWpH,UACjBtF,EAAO0M,EAAWpH,UAAUiG,KAAKhG,GAEjCvF,EAAO0M,EAAWpH,UAAY,CAACC,MAIvC,IAAIiG,EAAY,GAKhB,OAJAC,OAAOC,KAAK1L,GAAQqL,SAAQ,SAAA/F,GACxB,IAAMqH,EAAM3M,EAAOsF,GAAUsG,QAAO,SAACC,EAAMC,GAAP,OAAgBA,EAAQD,KAC5DL,EAAUD,KAAK,CAAClG,KAAMC,EAAUC,OAAQoH,OAErCnB,EAEEO,GACb,OACI,6BACI,yDACA,kBAAC,KAAD,CAAqBnO,MAAM,MAAMqM,OAAQ,GACrC,kBAAC,KAAD,KACI,kBAAC,KAAD,MACA,kBAAC,KAAD,CACI3I,KAAMA,EACNkJ,QAAQ,SACRwB,QAAQ,OACRC,YAAa,MACbC,KAAK,UACLhF,MAAO,SAAC5F,GAAD,MAAU,IAAMyG,WAAWzG,EAAKiE,QAAQ4D,QAAQ,KAGnD7H,EAAKgI,KAAI,SAAC6C,EAAOC,GAAR,OAAkB,kBAAC,KAAD,CAAM5C,IAAG,eAAU4C,GAASF,KAAMlB,cC1B1E4B,GApBC,SAACnO,GACb,IAEI+N,EAAS,GACTC,EAHiBhO,EAAM6C,KAGCuL,QAAO,SAAAtD,GAAK,OAAIA,EAAML,aAKlD,OAJGuD,EAASlE,OAAS,GACjBiE,EAAOjB,KAAK,kBAAC,GAAD,CAAoBkB,SAAUA,EAAUjD,IAAI,wBAIxD,kBAAC,GAAD,CAAa7E,MAAM,kBACb6H,EAAOjE,OAAS,GACdiE,EAEgB,IAAlBA,EAAOjE,QACL,sGCkDDoB,mBA/DF,SAAClL,GACV,IAAIiE,EAAUkD,uBAAY,SAAAxF,GAAK,OAAIA,EAAMsC,QAAQjC,cAC3CM,EAAW+E,wBAQjB,OANAwG,qBAAU,WACF5J,EAAQ1C,QAAW0C,EAAQzC,SAC3Bc,GhBCoB,SAAAA,GAG5B,OAFAA,EAASR,EAAYZ,SAEdqB,GAAOuL,MAAM,CAChBA,MAAOpL,YAAF,OAiBNC,MAAK,SAAAC,GACAA,EAAIC,MAAQD,EAAIC,KAAKwL,KACrB/L,EAASR,EAAYV,QAAQwB,EAAIC,KAAKwL,OAEtC/L,EAASR,EAAYT,KAAK,iEgBtBd,OAAhBrB,EAAMb,OAAkC,OAAhBa,EAAMb,MAE1B,kBAACuI,EAAA,EAAD,CACIC,WAAS,EACTE,UAAU,OAER5D,EAAQ1C,QAAU0C,EAAQ1C,OAAO6C,cAC/B,oCACI,kBAACsD,EAAA,EAAD,CACIC,WAAS,EACTE,UAAU,SACVC,QAAQ,aACRzI,WAAW,SACX0I,MAAO,CAAC5I,MAAM,MAAOmP,YAAY,UAEzB,kBAAC,GAAD,CAASzL,KAAMoB,EAAQ1C,SACvB,kBAAC,GAAD,CAAcsB,KAAMoB,EAAQ1C,OAAO6C,eACnC,kBAAC,GAAD,CAASvB,KAAMoB,EAAQ1C,OAAO6C,gBAE1C,kBAACsD,EAAA,EAAD,CACIC,WAAS,EACTE,UAAU,SACVC,QAAQ,aACRzI,WAAW,SACX0I,MAAO,CAAC5I,MAAM,MAAOoP,aAAa,UAE1B,kBAAC,GAAD,SAS5B,kBAAC7G,EAAA,EAAD,CACIC,WAAS,EACTE,UAAU,SACVC,QAAQ,SACRzI,WAAW,UAET4E,EAAQ1C,QAAU0C,EAAQ1C,OAAO6C,cAC/B,oCACI,kBAAC,GAAD,CAASvB,KAAMoB,EAAQ1C,SACvB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAASsB,KAAMoB,EAAQ1C,OAAO6C,eAC9B,kBAAC,GAAD,CAAcvB,KAAMoB,EAAQ1C,OAAO6C,oBC3DjDrF,GAAYC,aAAW,iBAAO,CAChCwP,QAAS,CACLrP,MAAO,MACPsP,SAAS,IACT9I,QAAQ,GACRC,gBAAiB,YACjBC,YAAY,EACZC,aAAc,EACdC,UAAW,gCACXzG,aAAc,IAElB4G,MAAO,CACH1G,SAAS,GACTE,WAAW,aACXD,UAAW,OACXiP,cAAc,GACdvP,MAAO,YAcAwP,GAVK,SAAC3O,GACjB,IAAMC,EAAUlB,KAChB,OACI,yBAAKuB,UAAWL,EAAQuO,SACpB,wBAAIlO,UAAWL,EAAQiG,OAAQlG,EAAMkG,OACpClG,EAAM4O,WChBJ1D,mBARF,SAAClL,GACV,OACI,6BACsB,OAAhBA,EAAMb,OAAkC,OAAhBa,EAAMb,OAAmB,kBAAC,EAAD,MACnD,kBAAC,GAAD,UCMNJ,GAAYC,aAAW,SAACyG,GAAD,MAAY,CACrCC,KAAM,CACFvG,MAAO,OACPwG,QAAQ,GACRC,gBAAiB,YACjBC,YAAY,EACZC,aAAc,EACdC,UAAW,iCAEfC,UAAW,CACPtG,WAAY,CACR,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACFuG,KAAK,MAGXC,MAAO,CACH1G,SAAS,GACTE,WAAW,aACXD,UAAW,SACXN,MAAO,YA0GA0P,GAtGD,WACV,IAAM5O,EAAUlB,KADA,EAEUoB,IAAMwG,SAAS,CACrCmI,SAAU,GACVC,SAAU,KAJE,mBAETpN,EAFS,KAEFoF,EAFE,KAOViI,EAAa7H,uBAAY,SAAAC,GAAK,OAAIA,EAAM7C,KAAKhB,SAC7CjB,EAAW+E,wBACXnH,EAAcC,IAAMC,YAAW,SAACJ,EAAOK,GAAR,OAAgB,yBAAKA,IAAKA,GAAK,kBAAC,IAAYL,OAC3EsH,EAAe,SAACC,GAClB,IAAMX,EAAOW,EAAMC,OAAOZ,KAC1BG,EAAS,eACFpF,EADC,eAEHiF,EAAOW,EAAMC,OAAOC,UAI7B,OACI,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTE,UAAU,SACVC,QAAQ,SACRzI,WAAW,SACX0I,MAAO,CAACnI,OAAQ,SAEhB,kBAAC8H,EAAA,EAAD,CACIC,WAAS,EACTC,QAAS,EACTC,UAAU,SACVxI,WAAW,SACXyI,QAAQ,SACRxH,UAAWL,EAAQyF,MAEnB,kBAACgC,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,wBAAImB,UAAWL,EAAQiG,OAAvB,2BAEJ,kBAACwB,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,kBAAC8I,EAAA,EAAD,CAAaC,WAAS,EAACzH,QAAQ,WAAWH,UAAWL,EAAQgI,aACzD,kBAACE,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACIX,MAAO9F,EAAMmN,SACbzG,SAAUf,EACVV,KAAK,WACL0B,WAAY,OAIxB,kBAACZ,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,kBAAC8I,EAAA,EAAD,CAAaC,WAAS,EAACzH,QAAQ,WAAWH,UAAWL,EAAQgI,aACzD,kBAACE,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACIX,MAAO9F,EAAMoN,SACb1G,SAAUf,EACVV,KAAK,WACL0B,WAAY,GACZS,KAAK,eAIjB,kBAACrB,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAO,SACtB,kBAACuI,EAAA,EAAD,CACIC,WAAS,EACTtI,WAAW,SACXyI,QAAQ,UAER,kBAACvH,EAAA,EAAD,CACIC,MAAM,UACNC,QAAQ,YACRK,KAAK,QACLqI,SAAU6F,EAAWxN,QACrB4H,QAAS,WhBxGR,IAACvG,EgByGEP,GhBzGFO,EgByGyBlB,EhBzGhB,SAAAW,GACnCA,EAASe,GAAOnC,SAD+B,IAExC4N,EAAsBjM,EAAtBiM,SAAUC,EAAYlM,EAAZkM,SAEjB,OAAOxM,GAAOC,OAAO,CACjBC,SAAUC,YAAF,KAEmBoM,EAAyBC,KAQrDpM,MAAK,SAAAC,GACDA,EAAIC,MAAQD,EAAIC,KAAKU,MACjBX,EAAIC,KAAKU,MAAM6B,MACd9C,EAASe,GAAOjC,QAAQwB,EAAIC,KAAKU,MAAM6B,QAChCxC,EAAIC,KAAKU,MAAM9B,MACtBa,EAASe,GAAOhC,KAAKuB,EAAIC,KAAKU,MAAM9B,MAAMwN,UAE1C3M,EAASe,GAAOhC,KAAK,sCAGzBiB,EAASe,GAAOhC,KAAK,6CgBmFL0G,MAAO,CAACmH,YAAY,IATxB,SAaA,kBAAC3O,EAAA,EAAD,CACIC,MAAM,YACNC,QAAQ,YACRG,UAAWV,EACXW,GAAG,UACHC,KAAK,QACLiH,MAAO,CAACoH,WAAW,IANvB,aAUPH,EAAWxN,SACR,yBAAKlB,UAAWL,EAAQuB,SACpB,kBAACiI,EAAA,EAAD,CAAkB3I,KAAM,MAG/BkO,EAAWvN,OACR,2BAAKuN,EAAWvN,UC5HrB2N,GAbA,SAACpP,GACZ,OACI,kBAAC0H,EAAA,EAAD,CACIC,WAAS,EACTE,UAAU,SACVC,QAAQ,SACRzI,WAAW,SACX0I,MAAO,CAACnI,OAAQ,SAEhB,kBAAC,GAAD,QCKGyP,GAdC,SAACrP,GACb,OACI,kBAAC0H,EAAA,EAAD,CACIC,WAAS,EACTE,UAAU,SACVC,QAAQ,SACRzI,WAAW,SACX0I,MAAO,CAACnI,OAAQ,SAEhB,kBAAC,GAAD,QCANb,GAAYC,aAAW,SAACyG,GAAD,MAAY,CACrCC,KAAM,CACFvG,MAAO,OACPwG,QAAQ,GACRC,gBAAiB,YACjBC,YAAY,EACZC,aAAc,EACdC,UAAW,iCAEfC,UAAW,CACPtG,WAAY,CACR,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACFuG,KAAK,MAGXC,MAAO,CACH1G,SAAS,GACTE,WAAW,aACXD,UAAW,SACXN,MAAO,YAqHAmQ,GAjHA,WACX,IAAMrP,EAAUlB,KADC,EAESoB,IAAMwG,SAAS,CACrCmI,SAAU,GACVC,SAAU,GACVQ,UAAW,KALE,mBAEV5N,EAFU,KAEHoF,EAFG,OAOa5G,IAAMwG,SAAS,MAP5B,mBAOV6I,EAPU,KAODC,EAPC,KASXC,EAAcvI,uBAAY,SAAAC,GAAK,OAAIA,EAAM7C,KAAKf,UAC9ClB,EAAW+E,wBAEXC,EAAe,SAACC,GAClB,IAAMX,EAAOW,EAAMC,OAAOZ,KAC1BG,EAAS,eACFpF,EADC,eAEHiF,EAAOW,EAAMC,OAAOC,UAI7B,OACI,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTE,UAAU,SACVC,QAAQ,SACRzI,WAAW,SACX0I,MAAO,CAACnI,OAAQ,SAEhB,kBAAC8H,EAAA,EAAD,CACIC,WAAS,EACTC,QAAS,EACTC,UAAU,SACVxI,WAAW,SACXyI,QAAQ,SACRxH,UAAWL,EAAQyF,MAEnB,kBAACgC,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,wBAAImB,UAAWL,EAAQiG,OAAvB,2BAEJ,kBAACwB,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,kBAAC8I,EAAA,EAAD,CAAaC,WAAS,EAACzH,QAAQ,WAAWH,UAAWL,EAAQgI,aACzD,kBAACE,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACIX,MAAO9F,EAAMmN,SACbzG,SAAUf,EACVV,KAAK,WACL0B,WAAY,OAIxB,kBAACZ,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,kBAAC8I,EAAA,EAAD,CAAaC,WAAS,EAACzH,QAAQ,WAAWH,UAAWL,EAAQgI,aACzD,kBAACE,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACIX,MAAO9F,EAAMoN,SACb1G,SAAUf,EACVV,KAAK,WACL0B,WAAY,GACZS,KAAK,eAIjB,kBAACrB,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAM,SACrB,kBAAC8I,EAAA,EAAD,CAAaC,WAAS,EAACzH,QAAQ,WAAWH,UAAWL,EAAQgI,aACzD,kBAACE,EAAA,EAAD,mBACA,kBAACC,EAAA,EAAD,CACIX,MAAO9F,EAAM4N,UACblH,SAAUf,EACVV,KAAK,YACL0B,WAAY,GACZS,KAAK,eAIjB,kBAACrB,EAAA,EAAD,CAAMM,MAAI,EAACD,MAAO,CAAC5I,MAAO,SACtB,kBAACuI,EAAA,EAAD,CACIC,WAAS,EACTtI,WAAW,SACXyI,QAAQ,UAER,kBAACvH,EAAA,EAAD,CACIC,MAAM,YACNC,QAAQ,YACRK,KAAK,QACLqI,SAAUuG,EAAYlO,QACtB4H,QAAS,WnBrFX,IAACvG,EmBsFSlB,EAAMoN,WAAapN,EAAM4N,UACzBjN,GnBvFTO,EmBuF6B,CAACiM,SAAUnN,EAAMmN,SAAUC,SAAUpN,EAAMoN,UnBvF/D,SAAAzM,GAChCA,EAASgB,GAAQpC,SAD2B,IAErC4N,EAAsBjM,EAAtBiM,SAAUC,EAAYlM,EAAZkM,SAEjB,OAAOxM,GAAOC,OAAO,CACjBC,SAAUC,YAAF,IAEwBoM,EAAyBC,KAQ1DpM,MAAK,SAAAC,GACDA,EAAIC,MAAQD,EAAIC,KAAK8M,WACjB/M,EAAIC,KAAK8M,WAAWvK,OACnB9C,EAASe,GAAOjC,QAAQwB,EAAIC,KAAK8M,WAAWvK,QAC5C9C,EAASgB,GAAQlC,QAAQ,cAClBwB,EAAIC,KAAKU,MAAM9B,MACtBa,EAASgB,GAAQjC,KAAKuB,EAAIC,KAAK8M,WAAWlO,MAAMwN,UAEhD3M,EAASgB,GAAQjC,KAAK,sCAG1BiB,EAASgB,GAAQjC,KAAK,4CmB+DEoO,EAAW,4BATvB,aAiBPC,EAAYlO,SACT,yBAAKlB,UAAWL,EAAQuB,SACpB,kBAACiI,EAAA,EAAD,CAAkB3I,KAAM,MAG/B0O,GACG,2BAAIA,GAEPE,EAAYjO,OACT,2BAAKiO,EAAYjO,UCnJ/B1C,GAAYC,aAAW,SAAAyG,GAAK,gBAAK,CACnCmK,OAAQ,CACJC,WAAY,mDACZ3Q,QAAS,OACT4Q,cAAe,SACf1Q,eAAgB,eAChBC,WAAY,SACZO,OAAQ,SAERmQ,UAAW,CACP7Q,QAAS,OACT4Q,cAAe,SACf1Q,eAAgB,SAChBC,WAAY,UAEZ6G,MAAO,CACH1F,MAAO,QACPhB,SAAS,GACTE,WAAW,cAEfsQ,SAAU,CACNxP,MAAO,QACPhB,SAAS,GACTE,WAAW,cAEfuQ,KAAM,CACFzP,MAAO,QACP0P,eAAgB,YAChBxQ,WAAW,aACXyQ,UAAU,GAElBC,eAAa,GACTlR,QAAQ,QADC,cAERuG,EAAM4K,YAAYC,KAAK,MAAQ,CAC5BR,cAAe,WAHV,+BAKM,UALN,2BAME,UANF,GAQTS,SAAO,mBACF9K,EAAM4K,YAAYC,KAAK,MAAO,CAC3B1Q,OAAQ,SAFT,cAIF6F,EAAM4K,YAAYG,GAAG,MAAQ,CAC1B5Q,OAAQ,OACR6Q,UAAW,IACXC,UAAW,MAPZ,6BASU,GATV,GAWPC,mBAAiB,GACb/K,gBAAiB,SADJ,cAEZH,EAAM4K,YAAYC,KAAK,MAAO,CAC3BnR,MAAO,SAHE,cAKZsG,EAAM4K,YAAYG,GAAG,MAAQ,CAC1BrR,MAAM,OACNyR,SAAU,IACVnC,SAAU,MARD,uBAUL,SAVK,0BAWF,iCAXE,6BAYC,GAZD,wBAaJ,QAbI,8BAcE,UAdF,+BAeG,gBAfH,2BAgBD,UAhBC,GAkBboC,mBAAoB,CAChBnR,WAAW,cAEfoR,cAAe,CACXC,cAAe,cA2BpBC,GAvBK,SAAChR,GACjB,IAAMC,EAAUlB,KAChB,OACI,yBAAKuB,UAAWL,EAAQ2P,QACpB,yBAAKtP,UAAWL,EAAQ8P,WACpB,wBAAIzP,UAAWL,EAAQiG,OAAvB,gBACA,wBAAI5F,UAAWL,EAAQ+P,UAAvB,0CACA,kBAAC,IAAD,CAAS1P,UAAWL,EAAQgQ,KAAMpP,GAAG,UAArC,wBAEJ,yBAAKP,UAAWL,EAAQmQ,eACpB,yBAAK9P,UAAWL,EAAQsQ,QAASU,IAAKC,EAAQ,KAAmCC,IAAI,kCACrF,yBAAK7Q,UAAWL,EAAQ0Q,mBACpB,wBAAIrQ,UAAWL,EAAQ4Q,oBAAvB,mCACA,wBAAIvQ,UAAWL,EAAQ6Q,eACnB,mDACA,2DACA,wDC5FlB/R,GAAYC,YAAW,CACzBwP,QAAS,CACLrP,MAAM,OACNS,OAAQ,OACRV,QAAS,OACT4Q,cAAe,SACf1Q,eAAgB,eAChBC,WAAY,UAEZoC,MAAO,CACHjC,SAAS,GACTE,WAAW,gBAaR0R,GATD,SAACpR,GACX,IAAMC,EAAUlB,KAChB,OACI,yBAAKuB,UAAWL,EAAQuO,SACpB,wBAAIlO,UAAWL,EAAQwB,OAAvB,OACA,qEAA0C,kBAAC,IAAD,CAASZ,GAAG,SAAZ,c,UCtBzCwQ,GAAsBC,mCAAwB,CACvDC,aAAc,SACdC,sBAAuB,SAAA7P,GAAK,OACxBA,EAAM4C,MACN5C,EAAM4C,KAAKhB,OACiB,OAA5B5B,EAAM4C,KAAKhB,MAAMhC,QAErBkQ,mBAAoB,wBAGXC,GAAuBJ,mCAAwB,CACxDC,aAAc,QACdC,sBAAuB,SAAA7P,GAAK,OACvBA,EAAM4C,MAAQ5C,EAAM4C,KAAKhB,OAAqC,OAA5B5B,EAAM4C,KAAKhB,MAAMhC,QAAqBI,EAAM4C,KAAKhB,MAAM9B,OAC9FkQ,mBAAmB,EACnBF,mBAAoB,yBCVlB1S,GAAYC,YAAW,CACzB4S,IAAI,CACAhS,OAAQ,QACRV,QAAS,OACT2S,aAAa,QAAD,OAAUC,OAAOC,YAAY,GAA7B,cAEZnC,OAAQ,CACJoC,QAAS,aACTnC,WAAY,mDACZ3Q,QAAS,OACTE,eAAgB,SAChBC,WAAY,UAEZ6G,MAAO,CACH1F,MAAO,QACPhB,SAAS,GACTE,WAAW,cAEnBuS,QAAS,CACLD,QAAS,aACTrM,QAAS,cA8BNuM,GA1BH,SAAClS,GACT,IAAMC,EAAUlB,KAEhB,MAAgB,MADDoI,uBAAY,SAAAxF,GAAK,OAAIA,EAAMoC,OAAOoO,SAASC,YAGlD,kBAAC,GAAD,MAIJ,yBAAK9R,UAAWL,EAAQ2R,KACpB,yBAAKtR,UAAWL,EAAQ2P,QACpB,wBAAItP,UAAWL,EAAQiG,OAAvB,kBAEJ,yBAAK5F,UAAWL,EAAQgS,SACpB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,QAAQ1R,UAAWyQ,GAAoBkB,MACzD,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAAS1R,UAAW8Q,GAAqB7C,MAC3D,kBAAC,IAAD,CAAOwD,OAAK,EAACC,KAAK,UAAU1R,UAAW8Q,GAAqBpC,MAC5D,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,WAAW1R,UAAWyQ,GAAoBhC,MAC5D,kBAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,UAAU1R,UAAWyQ,GAAoBjC,MAC3D,kBAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,IAAI1R,UAAWwQ,S,qBCzCrDoB,IAASC,OACP,kBAAC,WAAD,CAAU7O,MAAOA,IACf,kBAAC,IAAD,CAAiBd,QAASA,IACxB,kBAAC,GAAD,QAGJ4P,SAASC,eAAe,W","file":"static/js/main.1d39a669.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/App-Picture.9e4e3078.png\";","module.exports = __webpack_public_path__ + \"static/media/FredokaOne-Regular.4a2f2ea4.ttf\";","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport {AddCircleOutline} from \"@material-ui/icons\"\nimport {RemoveCircleOutline} from \"@material-ui/icons\"\nimport { NavLink } from \"react-router-dom\"\nimport { Button } from \"@material-ui/core\"\n\nconst useStyles = makeStyles({\n    topbar: {\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-evenly\",\n        alignItems: \"center\",\n        marginBottom: 10\n    },\n    text: {\n        fontSize:18,\n        textAlign:\"center\",\n        fontFamily:\"FredokaOne\",\n    },\n    button: {\n        width: 90,\n        height: 35,\n        border: 1,\n        fontSize: 10\n    },\n    buttonWrap: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        width: 285\n    }\n})\n\nconst HomeTopbar = (props) => {\n    const classes = useStyles()\n    const forwardLink = React.forwardRef((props, ref) => <div ref={ref}><NavLink {...props} /></div>)\n    return (\n        <div className={classes.topbar}>\n            <div className={classes.buttonWrap}>\n                <Button\n                    className={classes.button}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    startIcon={<AddCircleOutline/>}\n                    component={forwardLink} \n                    to=\"/income\"\n                    size=\"large\" \n                >Income</Button>\n                <Button\n                    className={classes.button}\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    startIcon={<RemoveCircleOutline/>}\n                    component={forwardLink} \n                    to=\"/expense\"\n                    size=\"large\" \n                >Expense</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default HomeTopbar","import { createAction } from \"@reduxjs/toolkit\";\n\nexport { createReducer } from \"@reduxjs/toolkit\";\n\n// export const domain = \"https://kwitter-api.herokuapp.com\";\n\nexport const jsonHeaders = {\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\"\n};\n\nexport const handleJsonResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n  return res.json().then(result => {\n    throw result;\n  });\n};\n\nexport const createActions = actionName => ({\n  START: createAction(actionName + \"/start\"),\n  SUCCESS: createAction(actionName + \"/success\"),\n  FAIL: createAction(actionName + \"/fail\")\n});\n\nexport const initialState = {\n  result: null,\n  loading: false,\n  error: null\n};\n\nexport const asyncCases = ({ START, SUCCESS, FAIL }) => ({\n  [START]: (state, action) => {\n    state.loading = true;\n    state.error = null;\n  },\n  [SUCCESS]: (state, action) => {\n    state.loading = false;\n    state.result = action.payload;\n  },\n  [FAIL]: (state, action) => {\n    state.loading = false;\n    state.error = action.payload;\n  }\n});\n\nexport const getInitStateFromStorage = (key, initialState) => {\n  const storedState = JSON.parse(localStorage.getItem(key));\n\n  if (storedState) {\n    const unchangedInitialStateProps =\n      Object.keys(storedState).every(\n        property => initialState[property] !== undefined\n      ) &&\n      Object.keys(initialState).every(\n        property => storedState[property] !== undefined\n      );\n    if (unchangedInitialStateProps) {\n      return storedState;\n    }\n  }\n  return initialState;\n};\n","import {\n    // domain,\n    // jsonHeaders,\n    // handleJsonResponse,\n    initialState,\n    asyncCases,\n    createActions,\n    createReducer\n} from \"./helpers\"\nimport {client} from './index'\nimport {gql} from 'apollo-boost'\n\nexport const GET_BALANCE = createActions(\"GET_BALANCE\")\nexport const getBalance = () => dispatch => {\n    dispatch(GET_BALANCE.START());\n\n    return client.query({\n        query: gql`\n            query user {\n                user {\n                    balance\n                    expense\n                    income\n                    transactions {\n                        id\n                        name\n                        category\n                        amount\n                        date\n                        isExpense\n                      }\n                }\n            }\n        `\n    }).then(res => {\n        if (res.data && res.data.user){\n            dispatch(GET_BALANCE.SUCCESS(res.data.user))\n        } else {\n            dispatch(GET_BALANCE.FAIL(\"Something went wrong, please log out and try again.\"))\n        }\n    })\n}\n\nexport const reducers = {\n    getBalance: createReducer(initialState, {\n        ...asyncCases(GET_BALANCE)\n    })\n}","import {\n    // domain,\n    // jsonHeaders,\n    // handleJsonResponse,\n    initialState,\n    asyncCases,\n    createActions,\n    createReducer\n} from \"./helpers\"\nimport {client} from './index'\nimport {gql} from 'apollo-boost'\n\nconst GET_HISTORY = createActions(\"GET_HISTORY\")\nexport const getHistory = () => dispatch => {\n    dispatch(GET_HISTORY.START());\n\n    return client.query({\n        query: gql`\n            query history {\n                history {\n                    balance\n                    income\n                    expense\n                    startDate\n                    endDate\n                    categories {\n                      name\n                      amount\n                    }\n                }\n            }\n        `\n    }).then(res => {\n        if (res.data && res.data.history){\n            dispatch(GET_HISTORY.SUCCESS(res.data.history))\n        } else {\n            dispatch(GET_HISTORY.FAIL(\"Something went wrong, please log out and try again.\"))\n        }\n    })\n}\n\nconst CREATE_HISTORY = createActions(\"NEW_PERIOD\")\nexport const createHistory = (endDate) => dispatch => {\n    dispatch(CREATE_HISTORY.START())\n    return client.mutate({\n        mutation: gql`\n            mutation createHistory {\n                createHistory(endDate: \"${endDate}\") {\n                    history {\n                        balance\n                        income\n                        expense\n                        startDate\n                        endDate\n                        categories {\n                            name\n                            amount\n                        }\n                    }\n                }\n            }\n        `\n    }).then(res => {\n        if (res.data && res.data.createHistory){\n            dispatch(GET_HISTORY.SUCCESS(res.data.createHistory.history))\n            return dispatch(CREATE_HISTORY.SUCCESS(\"Success\"))\n        } else {\n            return dispatch(CREATE_HISTORY.FAIL((res.errors) ? res.errors : \"Something went wrong, please try again.\"))\n        }\n    })\n}\n\n\nexport const reducers = {\n    getHistory: createReducer(initialState, {\n        ...asyncCases(GET_HISTORY)\n    }),\n    createHistory: createReducer(initialState, {\n        ...asyncCases(CREATE_HISTORY)\n    })\n}","import {\n    // domain,\n    // jsonHeaders,\n    // handleJsonResponse,\n    initialState,\n    asyncCases,\n    createActions,\n    createReducer\n} from \"./helpers\"\nimport {GET_BALANCE} from \"./balance\"\nimport {client} from \"./index\"\nimport {gql} from \"apollo-boost\"\nimport {createHistory as createHistoryAction} from \"./history\"\n\nconst POST_INCOME = createActions(\"POST_INCOME\")\nexport const postIncome = (incomeData) => async (dispatch, getStore) => {\n    dispatch(POST_INCOME.START());\n    const {name, amount, date, category, newPeriod} = incomeData\n\n    if(newPeriod) {\n        await dispatch(createHistoryAction(date))\n        if(!getStore().history.createHistory.result) {\n            return dispatch(POST_INCOME.FAIL(\"Something went wrong, please try again.\"))\n        }\n    }\n\n\n    return client.mutate({\n        mutation: gql`\n            mutation income {\n                createTransaction(name:\"${name}\", amount: ${parseInt(amount * 100)}, date: \"${date}\", isExpense:false, category:\"${category}\") {\n                    balance\n                    income\n                    expense\n                    transactions {\n                        name\n                        category\n                        amount\n                        date\n                        isExpense\n                    }\n                }\n            }\n        `\n    }).then(res => {\n        if (res.data && res.data.createTransaction){\n            dispatch(GET_BALANCE.SUCCESS(res.data.createTransaction))\n            return dispatch(POST_INCOME.SUCCESS())\n        } else {\n            return dispatch(POST_INCOME.FAIL((res.data.errors) ? res.data.errors : \"Something went wrong, please try again.\"))\n        }\n    })\n}\n\nconst POST_EXPENSE = createActions(\"POST_EXPENSE\")\nexport const postExpense = (expenseData) => dispatch => {\n    dispatch(POST_EXPENSE.START());\n    const {name, amount, date, category} = expenseData\n    return client.mutate({\n        mutation: gql`\n            mutation expense {\n                createTransaction(name:\"${name}\", amount: ${parseInt(amount * 100)}, date: \"${date}\", isExpense:true, category:\"${category}\") {\n                    balance\n                    income\n                    expense\n                    transactions {\n                        name\n                        category\n                        amount\n                        date\n                        isExpense\n                    }\n                }\n            }\n        `\n    }).then(res => {\n        if (res.data && res.data.createTransaction){\n            dispatch(GET_BALANCE.SUCCESS(res.data.createTransaction))\n            return dispatch(POST_EXPENSE.SUCCESS())\n        } else {\n            return dispatch(POST_EXPENSE.FAIL((res.data.errors) ? res.data.errors : \"Something went wrong, please try again.\"))\n        }\n    })\n}\n\nexport const reducers = {\n    postIncome: createReducer(initialState, {\n        ...asyncCases(POST_INCOME)\n    }),\n    postExpense: createReducer(initialState, {\n        ...asyncCases(POST_EXPENSE)\n    })\n}","import {\n    // domain,\n    // jsonHeaders,\n    // handleJsonResponse,\n    initialState,\n    asyncCases,\n    createActions,\n    createReducer\n} from \"./helpers\"\nimport {client} from \"./index\"\nimport {gql} from \"apollo-boost\"\n\nexport const LOG_IN = createActions(\"LOG_IN\")\nexport const getLoginToken = (data) => dispatch => {\n    dispatch(LOG_IN.START());\n    const {username, password} = data\n\n    return client.mutate({\n        mutation: gql`\n            mutation login {\n                login(username: \"${username}\", password: \"${password}\") {\n                    token\n                    error {\n                        message\n                    }\n                }\n            }\n        `\n    }).then(res => {\n        if(res.data && res.data.login){\n            if(res.data.login.token){\n                dispatch(LOG_IN.SUCCESS(res.data.login.token))\n            } else if (res.data.login.error) {\n                dispatch(LOG_IN.FAIL(res.data.login.error.message))\n            } else {\n                dispatch(LOG_IN.FAIL(\"Something went wrong 😖\"))\n            }\n        } else {\n            dispatch(LOG_IN.FAIL(\"Something went wrong 😖\"))\n        }\n    })\n    // return logIn(username, password).then(res => dispatch(LOG_IN.SUCCESS(res)))\n}\n\nexport const SIGN_UP = createActions(\"SIGN_UP\")\nexport const signUpUser = (data) => dispatch => {\n    dispatch(SIGN_UP.START());\n    const {username, password} = data\n\n    return client.mutate({\n        mutation: gql`\n            mutation createUser {\n                createUser(username: \"${username}\", password: \"${password}\") {\n                    token\n                    error {\n                        message\n                    }\n                }\n            }\n        `\n    }).then(res => {\n        if(res.data && res.data.createUser){\n            if(res.data.createUser.token){\n                dispatch(LOG_IN.SUCCESS(res.data.createUser.token))\n                dispatch(SIGN_UP.SUCCESS(\"Success!\"))\n            } else if (res.data.login.error) {\n                dispatch(SIGN_UP.FAIL(res.data.createUser.error.message))\n            } else {\n                dispatch(SIGN_UP.FAIL(\"Something went wrong 😖\"))\n            }\n        } else {\n            dispatch(SIGN_UP.FAIL(\"Something went wrong 😖\"))\n        }\n    })\n    // return logIn(username, password).then(res => dispatch(LOG_IN.SUCCESS(res)))\n}\n\nexport const reducers = {\n    login: createReducer(initialState, {\n        ...asyncCases(LOG_IN)\n    }),\n    signUp: createReducer(initialState, {\n        ...asyncCases(SIGN_UP)\n    })\n}","import { createBrowserHistory } from \"history\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport ApolloClient from \"apollo-boost\"\nimport { connectRouter } from \"connected-react-router\";\nimport {reducers as balanceReducers} from \"./balance\"\nimport {reducers as transactionReducers} from \"./transactions\"\nimport {reducers as historyReducers} from \"./history\"\nimport {reducers as authReducers} from \"./auth\"\n\nexport * from \"./balance\"\nexport * from \"./transactions\"\nexport * from \"./history\"\nexport * from \"./auth\"\n\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n});\n\nexport const store = configureStore({\n  reducer: {\n    router: connectRouter(history),\n    balance: combineReducers(balanceReducers),\n    transactions: combineReducers(transactionReducers),\n    history: combineReducers(historyReducers),\n    auth: combineReducers(authReducers),\n  },\n  preloadedState: {},\n  devTools: process.env.NODE_ENV !== \"production\"\n});\n\nexport const client = new ApolloClient({\n  uri: 'https://mini-finance-api.herokuapp.com/graphql',\n  onError: ({ networkError, graphQLErrors }) => {\n    console.log('graphQLErrors', graphQLErrors)\n    console.log('networkError', networkError)\n  },\n  request: (operation) => {\n    const token = store.getState().auth.login.result\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}`:''\n      }\n    })\n  }\n})","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport {\n    Select, \n    FormControl, \n    InputLabel,\n    TextField, \n    OutlinedInput, \n    InputAdornment,\n    Grid,\n    Button,\n    CircularProgress\n} from \"@material-ui/core\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postExpense } from \"../../redux\"\nimport { Redirect } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: \"75vw\",\n        padding:10,\n        backgroundColor: \"lightgrey\",\n        borderWidth:1,\n        borderRadius: 5,\n        boxShadow: \"2px 2px 4px rgba(0, 0, 0, .5)\"\n    },\n    TextField: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n          ].join(','),\n        \n    },\n    title: {\n        fontSize:18,\n        fontFamily:'FredokaOne',\n        textAlign: \"center\",\n        width: \"100%\"\n    },\n    loading: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\"\n    }\n}))\n\nconst ExpenseForm = (props) => {\n    const classes = useStyles()\n    const today = new Date();\n    const date = today.getFullYear()+'-'+(\"0\" + (today.getMonth()+1)).slice(-2)+'-'+(\"0\" + today.getDate()).slice(-2);\n    const [state, setState] = React.useState({\n        name: \"\",\n        category: \"\",\n        amount:\"\",\n        date: date\n    })\n    const [finished, setFinished] = React.useState(false)\n    const postState = useSelector(redux => redux.transactions.postExpense)\n    const dispatch = useDispatch()\n\n    // const handleAmountChange = (event) => {\n    //     const NON_DIGIT = /[0-9]*.?([0-9])+/g;\n    //     if(NON_DIGIT.test(event.target.value)){\n    //         setState({\n    //             ...state,\n    //             amount: event.target.value.match(NON_DIGIT),\n    //         });\n    //     }\n    // }\n\n    const handleChange = (event) => {\n        const name = event.target.name;\n        setState({\n            ...state,\n            [name]: event.target.value,\n        });\n    }\n    return (\n        <>\n        <Grid\n            container\n            spacing={2}\n            direction=\"column\"\n            alignItems=\"flex-start\"\n            justify=\"center\"\n            className={classes.form}\n            style={{}}\n        >\n            <Grid item style={{width:\"100%\"}}> \n                <h1 className={classes.title}>Add a new Expense</h1>\n            </Grid>\n            <Grid item style={{width:\"100%\"}}>\n                <FormControl fullWidth variant=\"outlined\" className={classes.FormControl}>\n                    <InputLabel>Name</InputLabel>\n                    <OutlinedInput\n                        value={state.name}\n                        onChange={handleChange}\n                        name=\"name\"\n                        labelWidth={60}\n                    />\n                </FormControl>\n            </Grid>\n\n            <Grid item style={{width:\"100%\"}}>\n                <FormControl variant=\"outlined\" fullWidth className={classes.Select}>\n                    <InputLabel>Category</InputLabel>\n                    <Select\n                        native\n                        value={state.category}\n                        onChange={handleChange}\n                        label=\"Category\"\n                        inputProps={{\n                            name: 'category',\n                        }}\n                    >\n                        <option  value=\"\" />\n                        <option value={\"Food\"}>Food</option>\n                        <option value={\"Gas\"}>Gas</option>\n                        <option value={\"Snacks\"}>Snacks</option>\n                        <option value={\"Hobbies\"}>Hobbies</option>\n                    </Select>\n                </FormControl>\n            </Grid>\n            \n            <Grid item style={{width:\"100%\"}}>\n                <FormControl fullWidth variant=\"outlined\" className={classes.FormControl}>\n                    <InputLabel>Amount</InputLabel>\n                    <OutlinedInput\n                        id=\"outlined-adornment-amount\"\n                        value={state.amount}\n                        onChange={handleChange}\n                        name=\"amount\"\n                        startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                        labelWidth={60}\n                    />\n                </FormControl>\n            </Grid>\n            \n            <Grid item style={{width:\"100%\"}}>\n                <div className={classes.FormControl}>\n                    <TextField\n                        name=\"date\"\n                        label=\"Date\"\n                        type=\"date\"\n                        value={state.date}\n                        onChange={handleChange}\n                        className={classes.textField}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                </div>\n            </Grid>\n\n            <Grid item style={{width: \"100%\"}}>\n                <Grid\n                    container\n                    alignItems=\"center\"\n                    justify=\"center\"\n                >\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        size=\"small\"\n                        disabled={postState.loading}\n                        onClick={() => {\n                            dispatch(postExpense({...state, amount: parseFloat(state.amount)}))\n                            setFinished(true)\n                        }} \n                    >\n                        Submit\n                    </Button>\n                </Grid>\n            </Grid>\n            {postState.loading && \n                <div className={classes.loading}>\n                    <CircularProgress size={20}/>\n                </div>\n            }\n        </Grid>\n        {\n         (finished && !postState.loading) &&\n            <Redirect to=\"/home\" />\n        }\n        </>\n    )\n}\n\nexport default ExpenseForm","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport {\n    FormControl,\n    FormControlLabel,\n    InputLabel,\n    TextField, \n    OutlinedInput, \n    InputAdornment,\n    Grid,\n    Button,\n    Checkbox,\n    CircularProgress\n} from \"@material-ui/core\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postIncome } from \"../../redux\"\nimport { Redirect } from \"react-router-dom\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: \"75vw\",\n        padding:10,\n        backgroundColor: \"lightgrey\",\n        borderWidth:1,\n        borderRadius: 5,\n        boxShadow: \"2px 2px 4px rgba(0, 0, 0, .5)\"\n    },\n    TextField: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n          ].join(','),\n        \n    },\n    title: {\n        fontSize:18,\n        fontFamily:'FredokaOne',\n        textAlign: \"center\",\n        width: \"100%\"\n    },\n    loading: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\"\n    }\n}))\n\nconst IncomeForm = (props) => {\n    const classes = useStyles()\n    const today = new Date();\n    const date = today.getFullYear()+'-'+(\"0\" + (today.getMonth()+1)).slice(-2)+'-'+(\"0\" + today.getDate()).slice(-2);\n    const [state, setState] = React.useState({\n        name: \"\",\n        amount:\"\",\n        date: date,\n        newPeriod: false\n    })\n    const [finished, setFinished] = React.useState(false)\n    const postState = useSelector(state => state.transactions.postIncome)\n    const currentData = useSelector(state => state.balance.getBalance.result)\n    const dispatch = useDispatch()\n\n    // const handleAmountChange = (event) => {\n    //     const NON_DIGIT = /[0-9]*.?([0-9])+/g;\n    //     if(NON_DIGIT.test(event.target.value)){\n    //         setState({\n    //             ...state,\n    //             amount: event.target.value.match(NON_DIGIT),\n    //         });\n    //     }\n    // }\n\n    const handleChange = (event) => {\n        const name = event.target.name;\n        setState({\n            ...state,\n            [name]: event.target.checked || event.target.value,\n        });\n    }\n    return (\n        <>\n        <Grid\n            container\n            spacing={2}\n            direction=\"column\"\n            alignItems=\"flex-start\"\n            justify=\"center\"\n            className={classes.form}\n            style={{}}\n        >\n            <Grid item style={{width:\"100%\"}}> \n                <h1 className={classes.title}>Add a new Income</h1>\n            </Grid>\n            <Grid item style={{width:\"100%\"}}>\n                <FormControl fullWidth variant=\"outlined\" className={classes.FormControl}>\n                    <InputLabel>Name</InputLabel>\n                    <OutlinedInput\n                        value={state.name}\n                        onChange={handleChange}\n                        name=\"name\"\n                        labelWidth={60}\n                    />\n                </FormControl>\n            </Grid>\n            \n            <Grid item style={{width:\"100%\"}}>\n                <FormControl fullWidth variant=\"outlined\" className={classes.FormControl}>\n                    <InputLabel>Amount</InputLabel>\n                    <OutlinedInput\n                        id=\"outlined-adornment-amount\"\n                        value={state.amount}\n                        onChange={handleChange}\n                        name=\"amount\"\n                        startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                        labelWidth={60}\n                    />\n                </FormControl>\n            </Grid>\n            \n            <Grid item style={{width:\"100%\"}}>\n                <div className={classes.FormControl}>\n                    <TextField\n                        name=\"date\"\n                        label=\"Date\"\n                        type=\"date\"\n                        value={state.date}\n                        onChange={handleChange}\n                        className={classes.textField}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                </div>\n            </Grid>\n            {(currentData.transactions && currentData.transactions.length > 0) &&\n                <Grid item style={{width:\"100%\"}}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={state.newPeriod}\n                                onChange={handleChange}\n                                name=\"newPeriod\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Add to new period\"\n                    />\n                </Grid>\n            }\n\n            <Grid item style={{width: \"100%\"}}>\n                <Grid\n                    container\n                    alignItems=\"center\"\n                    justify=\"center\"\n                >\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        size=\"small\"\n                        disabled={postState.loading}\n                        onClick={() => {\n                            dispatch(postIncome({...state, amount: parseFloat(state.amount)}))\n                            setFinished(true)\n                        }} \n                    >Submit</Button>\n                </Grid>\n            </Grid>\n            {postState.loading && \n                <div item className={classes.loading}>\n                    <CircularProgress size={20}/>\n                </div>\n            }\n        </Grid>\n        {\n         (finished && !postState.loading) &&\n            <Redirect to=\"/home\" />\n        }\n        </>\n    )\n}\n\nexport default IncomeForm","import React from \"react\"\nimport {Grid} from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { dateString } from \"../../helpers\"\n\nconst useStyles = makeStyles({\n    amount: {\n        fontWeight: \"bold\",\n    }\n})\n\nconst Transaction = (props) => {\n    let classes = useStyles()\n    let sign = (props.data.isExpense) ? \"-\":\"+\"\n    let color = (props.data.isExpense) ? \"red\":\"green\"\n    let amount = (props.data.amount === 0) ? 0 : parseFloat(props.data.amount / 100).toFixed(2)\n    return (\n        <Grid\n            container\n            direction=\"column\"\n        >\n            <h1>{props.data.name}</h1>\n            <Grid\n                container\n                justify=\"space-between\"\n            >\n                <h3>{dateString(props.data.date)}</h3>\n                <h2 className={classes.amount} style={{color: color}}>{sign}${amount}</h2>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Transaction","export const dateString = (date) => {\n    const months = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"]\n    date = date.split(\"-\")\n    return `${months[parseInt(date[1])]} ${parseInt(date[2])}, ${date[0]}`\n} ","import React from \"react\"\nimport Transaction from \"./Transaction\"\nimport {Grid} from \"@material-ui/core\"\nimport {ContentCard} from \"../index\"\n\nconst Transactions = (props) => {\n    const transactions = props.data.map(trans => \n        <Grid item style={{width: \"100%\"}} key={trans.id}>\n            <Transaction data={trans}/>\n        </Grid>\n    )\n    return (\n        <ContentCard title=\"Recent Activity\">\n            <Grid\n                container\n                spacing={3}\n                direction=\"column\"\n                justify=\"space-between\"\n                alignItems=\"center\"\n            >\n                {transactions}\n                {transactions.length === 0 &&\n                    <Grid item style={{width:\"100%\"}}>\n                        <p>No transactions found, start tracking your finances to see data.</p>\n                    </Grid>\n                }\n            </Grid>\n        </ContentCard>\n    )\n}\n\nexport default Transactions","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Grid, withWidth } from \"@material-ui/core\"\nimport {ContentCard} from \"../index\"\nimport {HomeTopbar} from \"../index\"\n\nconst useStyles = makeStyles(() => ({\n    med: {\n        fontSize:18,\n    },\n    small: {\n        fontSize:14,\n    }\n}))\n\nconst Balance = (props) => {\n    const classes = useStyles()\n    let {balance, income, expense} = props.data\n    balance = (balance === 0) ? 0 : parseFloat(props.data.balance / 100).toFixed(2)\n    income = (income === 0) ? 0 : parseFloat(props.data.income / 100).toFixed(2)\n    expense  = (expense === 0) ? 0 : parseFloat(props.data.expense / 100).toFixed(2)\n    return (\n        <ContentCard title=\"Account Details\">\n            <Grid\n                container\n                justify=\"space-between\"\n            >\n                <h2 className={classes.med}>Balance</h2>\n                <h2 className={classes.med}>${balance}</h2>\n            </Grid>\n            <Grid\n                container\n                justify=\"space-between\"\n            >\n                <h2 className={classes.small}>Income</h2>\n                <h2 className={classes.small}>${income}</h2>\n            </Grid>\n            <Grid\n                container\n                justify=\"space-between\"\n            >\n                <h2 className={classes.small}>Expenses</h2>\n                <h2 className={classes.small}>${expense}</h2>\n            </Grid>\n            {(props.width === \"lg\" || props.width === \"xl\") && <HomeTopbar/>}\n        </ContentCard>\n    )\n}\nexport default withWidth()(Balance)","import React from \"react\"\nimport {ResponsiveContainer, LineChart, XAxis, YAxis, CartesianGrid, Tooltip, Line, Legend} from \"recharts\"\n\nconst IncomeAndExpense = (props) => {\n    const {history} = props\n\n    let name = (startDate, endDate) => {\n        const months = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"]\n        startDate = startDate.split(\"-\")\n        endDate = endDate.split(\"-\")\n        return (startDate[1] === endDate[1]) ? `${months[parseInt(startDate[1]) - 1]} ${startDate[2]}-${endDate[2]}` : `${months[parseInt(startDate[1]) - 1]} ${startDate[2]} - ${months[parseInt(endDate[1]) - 1]} ${endDate[2]}`\n    }\n\n    let data = () => history.slice(0, 5).map(historyObj => (\n        {\n            name: name(historyObj.startDate, historyObj.endDate),\n            balance: parseFloat(historyObj.balance / 100).toFixed(2),\n            income: parseFloat(historyObj.income / 100).toFixed(2),\n            expense: parseFloat(historyObj.expense / 100).toFixed(2)\n        }\n    ))\n\n    return (\n        <div>\n            <p>Income and Expense over pay periods</p>\n            <ResponsiveContainer width=\"99%\" aspect={2}>\n                <LineChart data={data()} margin={{top: 0, right: 0, left: -30, bottom: 0}}>\n                    <XAxis dataKey=\"name\" style={{fontSize:13}}/>\n                    <YAxis style={{fontSize:13}}/>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip separator=\": $\"/>\n                    <Legend verticalAlign=\"top\" height={36}/>\n                    <Line type=\"monotone\" dataKey=\"income\" stroke=\"#8884d8\" dot={{r:3}}/>\n                    <Line type=\"monotone\" dataKey=\"expense\" stroke=\"#82ca9d\" dot={{r:3}}/>\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nexport default IncomeAndExpense","import React from \"react\"\nimport {ResponsiveContainer, PieChart, Pie, Legend, Cell} from \"recharts\"\n\nconst ExpensesByCategory = (props) => {\n    const {history} = props\n\n    const getRandomColor = () => { // From github gist: https://gist.github.com/mucar/3898821\n        const letters = '3456789ABC'; // Adjusted to only use lighter colors\n        let color = '#';\n        for (let i = 0; i < 6; i++) {\n            color += letters[Math.floor(Math.random() * 9)];\n        }\n        return color;\n    }\n\n    const getData = () => {\n        let result = {}\n\n        history.slice(0, 5).forEach(historyObj => {\n            historyObj.categories.forEach(category => {\n                const amount = parseFloat(category.amount / 100)\n                if(result[category.name]){\n                    result[category.name].push(amount)\n                } else {\n                    result[category.name] = [amount]\n                }\n            })\n        })\n\n        let resultArr = []\n        Object.keys(result).forEach(category => {\n            const sum = result[category].reduce((prev, curr) => curr += prev)\n            const avg = sum / result[category].length\n            resultArr.push({name: category, amount: avg})\n        })\n        return resultArr\n    }\n    const data = getData()\n    return (\n        <div>\n            <p>Average Expenses by Category</p>\n            <ResponsiveContainer width=\"100%\" aspect={1}>\n                <PieChart>\n                    <Legend />\n                    <Pie \n                        data={data}\n                        dataKey=\"amount\"\n                        nameKey=\"name\"\n                        outerRadius={\"70%\"}\n                        fill=\"#8884d8\"\n                        label={(data) => \"$\" + parseFloat(data.amount).toFixed(2)}\n                        >\n                        {\n                            data.map((entry, index) => <Cell key={`cell-${index}`} fill={getRandomColor()} />)\n                        }\n                    </Pie>\n                </PieChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nexport default ExpensesByCategory","import React, {useEffect} from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getHistory } from \"../../../redux\"\nimport {IncomeAndExpense, ExpensesByCategory} from \"./historyCharts\"\nimport {ContentCard} from \"../index\"\n\nconst History = (props) => {\n    const dispatch = useDispatch()\n    let history = useSelector(state => state.history.getHistory)\n\n    useEffect(() => {\n        if(!history.result && !history.loading){\n            dispatch(getHistory())\n        }\n    })\n\n    let charts = []\n\n    if(history.result && history.result.length >= 2){\n        charts.push(<IncomeAndExpense history={history.result} key=\"IncomeAndExpense\"/>)\n    }\n    if(history.result && history.result.length >= 1){\n        charts.push(<ExpensesByCategory history={history.result} key=\"ExpensesByCategory\"/>)\n    }\n\n    return (\n        <ContentCard title=\"Historic Charts\">\n            {(history.result && charts.length > 0) &&\n                charts \n            }\n            {(history.result && charts.length === 0) &&\n                <p>Not enough information for historic charts. Keep tracking those transactions!</p>\n            }\n        </ContentCard>\n    )\n}\n\nexport default History","import React from \"react\"\nimport {ResponsiveContainer, PieChart, Pie, Legend, Cell} from \"recharts\"\n\nconst ExpensesByCategory = (props) => {\n    const {expenses} = props\n\n    const getRandomColor = () => { // From github gist: https://gist.github.com/mucar/3898821\n        const letters = '3456789ABC'; // Adjusted to only use lighter colors\n        let color = '#';\n        for (let i = 0; i < 6; i++) {\n            color += letters[Math.floor(Math.random() * 9)];\n        }\n        return color;\n    }\n\n    const getData = () => {\n        let result = {}\n\n       expenses.forEach(expenseObj => {\n            const amount = parseFloat(expenseObj.amount / 100)\n            if(result[expenseObj.category]){\n                result[expenseObj.category].push(amount)\n            } else {\n                result[expenseObj.category] = [amount]\n            }\n        })\n\n        let resultArr = []\n        Object.keys(result).forEach(category => {\n            const sum = result[category].reduce((prev, curr) => curr += prev)\n            resultArr.push({name: category, amount: sum})\n        })\n        return resultArr\n    }\n    const data = getData()\n    return (\n        <div>\n            <p>Total Expenses by Category</p>\n            <ResponsiveContainer width=\"99%\" aspect={1}>\n                <PieChart>\n                    <Legend />\n                    <Pie \n                        data={data}\n                        dataKey=\"amount\"\n                        nameKey=\"name\"\n                        outerRadius={\"65%\"}\n                        fill=\"#8884d8\"\n                        label={(data) => \"$\" + parseFloat(data.amount).toFixed(2)}\n                        >\n                        {\n                            data.map((entry, index) => <Cell key={`cell-${index}`} fill={getRandomColor()} />)\n                        }\n                    </Pie>\n                </PieChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\nexport default ExpensesByCategory","import React from \"react\"\nimport {ContentCard} from \"../index\"\nimport {ExpensesByCategory} from \"./currentCharts\"\n\nconst Current = (props) => {\n    const transactions = props.data\n\n    let charts = []\n    let expenses = transactions.filter(trans => trans.isExpense)\n    if(expenses.length > 2){\n        charts.push(<ExpensesByCategory expenses={expenses} key=\"ExpensesByCategory\"/>)\n    }\n\n    return (\n        <ContentCard title=\"Current Charts\">\n            { charts.length > 0 &&\n                charts\n            }\n            { charts.length === 0 &&\n                <p>Not enough data for current charts. Keep tracking those transactions!</p>\n            }\n        </ContentCard>\n    )\n}\nexport default Current","import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getBalance } from \"../../redux\"\nimport {Transactions, Balance, History, Current} from \"./data/index.js\"\nimport {Grid, withWidth} from \"@material-ui/core\"\n\nconst Data = (props) => {\n    let balance = useSelector(state => state.balance.getBalance)\n    const dispatch = useDispatch()\n    \n    useEffect(() => {\n        if(!balance.result && !balance.loading){\n            dispatch(getBalance())\n        }\n    })  \n\n    if (props.width === \"lg\" || props.width === \"xl\" ){\n        return (\n            <Grid\n                container\n                direction=\"row\"\n            >\n                {(balance.result && balance.result.transactions) &&\n                    <>\n                        <Grid\n                            container\n                            direction=\"column\"\n                            justify=\"flex-start\"\n                            alignItems=\"center\"\n                            style={{width:\"50%\", paddingLeft:\"3.75%\"}}\n                        >\n                                    <Balance data={balance.result} />\n                                    <Transactions data={balance.result.transactions} />\n                                    <Current data={balance.result.transactions}/>\n                        </Grid>\n                        <Grid\n                            container\n                            direction=\"column\"\n                            justify=\"flex-start\"\n                            alignItems=\"center\"\n                            style={{width:\"50%\", paddingRight:\"3.75%\"}}\n                        >\n                                    <History />\n                        </Grid>\n                    </>\n                }\n            </Grid>\n        )\n    }\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n        >\n            {(balance.result && balance.result.transactions) &&\n                <>\n                    <Balance data={balance.result} />\n                    <History />\n                    <Current data={balance.result.transactions}/>\n                    <Transactions data={balance.result.transactions} />\n                </>\n            }\n        </Grid>\n    )\n}\n\nexport default withWidth()(Data)","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(() => ({\n    wrapper: {\n        width: \"85%\",\n        maxWidth:738,\n        padding:15,\n        backgroundColor: \"lightgrey\",\n        borderWidth:1,\n        borderRadius: 5,\n        boxShadow: \"2px 2px 4px rgba(0, 0, 0, .5)\",\n        marginBottom: 10\n    },\n    title: {\n        fontSize:18,\n        fontFamily:'FredokaOne',\n        textAlign: \"left\",\n        paddingBottom:15,\n        width: \"100%\"\n    }\n}))\n\nconst ContentCard = (props) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.wrapper}>\n            <h1 className={classes.title}>{props.title}</h1>\n            {props.children}\n        </div>\n    )\n}\n\nexport default ContentCard","import React from \"react\"\nimport {HomeTopbar, Data} from \"../components\"\nimport {withWidth} from \"@material-ui/core\"\n\nconst Home = (props) => {\n    return(\n        <div>\n            {(props.width !== \"lg\" && props.width !== \"xl\") && <HomeTopbar/>}\n            <Data />\n        </div>\n    )\n}\nexport default withWidth()(Home)","import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport {\n    FormControl,\n    InputLabel,\n    OutlinedInput,\n    Grid,\n    Button,\n    CircularProgress\n} from \"@material-ui/core\"\nimport { NavLink } from \"react-router-dom\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport { getLoginToken } from \"../../redux\"\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: \"75vw\",\n        padding:10,\n        backgroundColor: \"lightgrey\",\n        borderWidth:1,\n        borderRadius: 5,\n        boxShadow: \"2px 2px 4px rgba(0, 0, 0, .5)\"\n    },\n    TextField: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n        \n    },\n    title: {\n        fontSize:18,\n        fontFamily:'FredokaOne',\n        textAlign: \"center\",\n        width: \"100%\"\n    },\n}))\n\nconst Login = () => {\n    const classes = useStyles()\n    const [state, setState] = React.useState({\n        username: \"\",\n        password: \"\"\n    })\n    // const [finished, setFinished] = React.useState(false)\n    const loginState = useSelector(redux => redux.auth.login)\n    const dispatch = useDispatch()\n    const forwardLink = React.forwardRef((props, ref) => <div ref={ref}><NavLink {...props} /></div>)\n    const handleChange = (event) => {\n        const name = event.target.name\n        setState({\n            ...state,\n            [name]: event.target.value,\n        })\n    }\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{height: \"100%\"}}\n        >  \n            <Grid\n                container\n                spacing={2}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                className={classes.form}\n            >\n                <Grid item style={{width:\"100%\"}}>\n                    <h1 className={classes.title}>Log in to your account</h1>\n                </Grid>\n                <Grid item style={{width:\"100%\"}}>\n                    <FormControl fullWidth variant=\"outlined\" className={classes.FormControl}>\n                        <InputLabel>Username</InputLabel>\n                        <OutlinedInput\n                            value={state.username}\n                            onChange={handleChange}\n                            name=\"username\"\n                            labelWidth={60}\n                        />\n                    </FormControl>\n                </Grid>\n                <Grid item style={{width:\"100%\"}}>\n                    <FormControl fullWidth variant=\"outlined\" className={classes.FormControl}>\n                        <InputLabel>Password</InputLabel>\n                        <OutlinedInput\n                            value={state.password}\n                            onChange={handleChange}\n                            name=\"password\"\n                            labelWidth={60}\n                            type=\"password\"\n                        />\n                    </FormControl>\n                </Grid>\n                <Grid item style={{width: \"100%\"}}>\n                    <Grid\n                        container\n                        alignItems=\"center\"\n                        justify=\"center\"\n                    >\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"small\"\n                            disabled={loginState.loading}\n                            onClick={() => {\n                                dispatch(getLoginToken(state))\n                                // setFinished(true)\n                            }}\n                            style={{marginRight:5}} \n                        >\n                            Login\n                        </Button>\n                        <Button\n                            color=\"secondary\"\n                            variant=\"contained\"\n                            component={forwardLink} \n                            to=\"/signup\"\n                            size=\"small\"\n                            style={{marginLeft:5}}  \n                        >Sign Up</Button>\n                    </Grid>\n                </Grid>\n                {loginState.loading && \n                    <div className={classes.loading}>\n                        <CircularProgress size={20}/>\n                    </div>\n                }\n                {loginState.error &&\n                    <p>{ loginState.error }</p>\n                }\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Login","import React from \"react\"\nimport {IncomeForm} from \"../components\"\nimport { Grid } from \"@material-ui/core\"\n\nconst Income = (props) => {\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{height: \"100%\"}}\n        >  \n            <IncomeForm />\n        </Grid>\n    )\n}\nexport default Income","import React from \"react\"\nimport {ExpenseForm} from \"../components\"\nimport { Grid } from \"@material-ui/core\"\n\nconst Expense = (props) => {\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{height: \"100%\"}}\n        >  \n            <ExpenseForm />\n        </Grid>\n    )\n}\n\nexport default Expense","import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport {\n    FormControl,\n    InputLabel,\n    OutlinedInput,\n    Grid,\n    Button,\n    CircularProgress\n} from \"@material-ui/core\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport { signUpUser } from \"../../redux\"\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: \"75vw\",\n        padding:10,\n        backgroundColor: \"lightgrey\",\n        borderWidth:1,\n        borderRadius: 5,\n        boxShadow: \"2px 2px 4px rgba(0, 0, 0, .5)\"\n    },\n    TextField: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n        \n    },\n    title: {\n        fontSize:18,\n        fontFamily:'FredokaOne',\n        textAlign: \"center\",\n        width: \"100%\"\n    },\n}))\n\nconst Signup = () => {\n    const classes = useStyles()\n    const [state, setState] = React.useState({\n        username: \"\",\n        password: \"\",\n        password2: \"\"\n    })\n    const [warning, setWarning] = React.useState(null)\n\n    const signUpState = useSelector(redux => redux.auth.signUp)\n    const dispatch = useDispatch()\n    \n    const handleChange = (event) => {\n        const name = event.target.name\n        setState({\n            ...state,\n            [name]: event.target.value,\n        })\n    }\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{height: \"100%\"}}\n        >  \n            <Grid\n                container\n                spacing={2}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                className={classes.form}\n            >\n                <Grid item style={{width:\"100%\"}}>\n                    <h1 className={classes.title}>Sign up for an account</h1>\n                </Grid>\n                <Grid item style={{width:\"100%\"}}>\n                    <FormControl fullWidth variant=\"outlined\" className={classes.FormControl}>\n                        <InputLabel>Username</InputLabel>\n                        <OutlinedInput\n                            value={state.username}\n                            onChange={handleChange}\n                            name=\"username\"\n                            labelWidth={60}\n                        />\n                    </FormControl>\n                </Grid>\n                <Grid item style={{width:\"100%\"}}>\n                    <FormControl fullWidth variant=\"outlined\" className={classes.FormControl}>\n                        <InputLabel>Password</InputLabel>\n                        <OutlinedInput\n                            value={state.password}\n                            onChange={handleChange}\n                            name=\"password\"\n                            labelWidth={60}\n                            type=\"password\"\n                        />\n                    </FormControl>\n                </Grid>\n                <Grid item style={{width:\"100%\"}}>\n                    <FormControl fullWidth variant=\"outlined\" className={classes.FormControl}>\n                        <InputLabel>Password 2</InputLabel>\n                        <OutlinedInput\n                            value={state.password2}\n                            onChange={handleChange}\n                            name=\"password2\"\n                            labelWidth={60}\n                            type=\"password\"\n                        />\n                    </FormControl>\n                </Grid>\n                <Grid item style={{width: \"100%\"}}>\n                    <Grid\n                        container\n                        alignItems=\"center\"\n                        justify=\"center\"\n                    >\n                        <Button\n                            color=\"secondary\"\n                            variant=\"contained\"\n                            size=\"small\"\n                            disabled={signUpState.loading}\n                            onClick={() => {\n                                if (state.password === state.password2){\n                                    dispatch(signUpUser({username: state.username, password: state.password}))\n                                } else {\n                                    setWarning(\"Passwords do not match\")\n                                }\n                            }} \n                        >\n                            Sign up\n                        </Button>\n                    </Grid>\n                </Grid>\n                {signUpState.loading && \n                    <div className={classes.loading}>\n                        <CircularProgress size={20}/>\n                    </div>\n                }\n                {warning &&\n                    <p>{warning}</p>\n                }\n                {signUpState.error &&\n                    <p>{ signUpState.error }</p>\n                }\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Signup","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { NavLink } from \"react-router-dom\"\n\nconst useStyles = makeStyles(theme => ({\n    header: {\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-around\",\n        alignItems: \"center\",\n        height: \"100vh\",\n    },\n        titleWrap: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n        },\n            title: {\n                color: \"white\",\n                fontSize:35,\n                fontFamily:'FredokaOne',\n            },\n            subtitle: {\n                color: \"white\",\n                fontSize:16,\n                fontFamily:'FredokaOne'\n            },\n            link: {\n                color: \"white\",\n                textDecoration: \"underline\",\n                fontFamily:'FredokaOne',\n                marginTop:5\n            },\n        headerContent: {\n            display:\"flex\",\n            [theme.breakpoints.down('sm')]: {\n                flexDirection: \"column\",\n            },\n            justifyContent:\"center\",\n            alignItems:\"center\"\n        },\n            picture: {\n                [theme.breakpoints.down('sm')]:{\n                    height: '55vh',\n                },\n                [theme.breakpoints.up('md')]: {\n                    height: '75vh',\n                    minHeight: 545,\n                    maxheight: 750\n                },\n                marginBottom:5\n            },\n            headerContentCard: {\n                backgroundColor: \"white\",\n                [theme.breakpoints.down('sm')]:{\n                    width: \"85vw\",\n                },\n                [theme.breakpoints.up('md')]: {\n                    width:\"25vw\",\n                    minWidth: 295,\n                    maxWidth: 400\n                },\n                height: \"100px\",\n                boxShadow: \"3px 3px 4px rgba(0, 0, 0, .5)\",\n                borderRadius: 3,\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-around\",\n                alignItems: \"center\"\n            },\n                headerContentTitle: {\n                    fontFamily:'FredokaOne',\n                },\n                unorderedList: {\n                    listStyleType: \"circle\",\n            }\n}))\n\nconst LandingPage = (props) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.header}>\n            <div className={classes.titleWrap}>\n                <h1 className={classes.title}>Mini-Finance</h1>\n                <h3 className={classes.subtitle}>Track your spending patterns and save!</h3>\n                <NavLink className={classes.link} to='/login'>Continue to the app</NavLink>\n            </div>\n            <div className={classes.headerContent}>\n                <img className={classes.picture} src={require('../../pictures/App-Picture.png')} alt=\"Screenshot of the application\"/>\n                <div className={classes.headerContentCard}>\n                    <h3 className={classes.headerContentTitle}>A portfolio project built with:</h3>\n                    <ul className={classes.unorderedList}>\n                        <li>Mobile first design</li>\n                        <li>Latest frameworks and tools</li>\n                        <li>GraphQL API backend</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default LandingPage","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport {NavLink} from \"react-router-dom\"\n\nconst useStyles = makeStyles({\n    wrapper: {\n        width:'100%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n        alignItems: 'center'\n    },\n        error: {\n            fontSize:50,\n            fontFamily:'FredokaOne'\n        }\n})\n\nconst Error = (props) => {\n    const classes = useStyles()\n    return(\n        <div className={classes.wrapper}>\n            <h1 className={classes.error}>404</h1>\n            <p>Oops! I don't think this is working... <NavLink to=\"/home\">Go Home</NavLink></p>\n        </div>\n    )\n}\nexport default Error","import {connectedRouterRedirect} from \"redux-auth-wrapper/history4/redirect\"\n\nexport const userIsAuthenticated = connectedRouterRedirect({\n    redirectPath: \"/login\",\n    authenticatedSelector: state =>\n        state.auth &&\n        state.auth.login &&\n        state.auth.login.result !== null,\n\n    wrapperDisplayName: \"UserIsAuthenticated\"\n})\n\nexport const userNotAuthenticated = connectedRouterRedirect({\n    redirectPath: \"/home\",\n    authenticatedSelector: state =>\n        (state.auth && state.auth.login && state.auth.login.result === null) || (state.auth.login.error),\n    allowRedirectBack: false,\n    wrapperDisplayName: \"UserNotAuthenticated\"\n})","import React from \"react\"\nimport {Switch, Route} from \"react-router-dom\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport {Home, Income, Expense, Login, Signup, LandingPage, Error} from \"./pages\"\nimport {userIsAuthenticated, userNotAuthenticated} from \"./helpers/HOCs\"\nimport {useSelector} from \"react-redux\"\n\nconst useStyles = makeStyles({\n    app:{\n        height: \"100vh\",\n        display: \"grid\",\n        gridTemplate: `75px ${window.innerHeight-75}px / auto`\n    },\n        header: {\n            gridRow: \"1 / span 1\",\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n        },\n            title: {\n                color: \"white\",\n                fontSize:25,\n                fontFamily:'FredokaOne'\n            },\n        content: {\n            gridRow: \"2 / span 1\",\n            padding: \"20px 0px\"\n        }\n})\n\nconst App = (props) => {\n    const classes = useStyles()\n    let pathname = useSelector(state => state.router.location.pathname)\n    if(pathname === \"/\"){\n        return (\n            <LandingPage />\n        )\n    }\n    return(\n        <div className={classes.app}>\n            <div className={classes.header}>\n                <h1 className={classes.title}>Micro-Finance</h1>\n            </div>\n            <div className={classes.content}>\n                <Switch>\n                    <Route exact path=\"/home\" component={userIsAuthenticated(Home)} />\n                    <Route exact path=\"/login\" component={userNotAuthenticated(Login)} />\n                    <Route exact path=\"/signup\" component={userNotAuthenticated(Signup)} />\n                    <Route exact path=\"/expense\" component={userIsAuthenticated(Expense)} />\n                    <Route exact path=\"/income\" component={userIsAuthenticated(Income)} />\n                    <Route exact path=\"*\" component={Error}/>\n                </Switch>\n            </div>\n        </div>\n    )\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport {App} from \"./react\"\nimport { store, history } from \"./redux\";\nimport './fonts/FredokaOne-Regular.ttf'\nimport \"./reset.css\"\nimport \"./index.css\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}